<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>CoderPunk</title>
    <link>https://gdhucoder.github.io/</link>
    <description>Recent content on CoderPunk</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cmn-Hans</language>
    <lastBuildDate>Wed, 21 Oct 2020 05:51:17 +0800</lastBuildDate>
    
	<atom:link href="https://gdhucoder.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>参加婚礼</title>
      <link>https://gdhucoder.github.io/thinking/2020-10-21/</link>
      <pubDate>Wed, 21 Oct 2020 05:51:17 +0800</pubDate>
      
      <guid>https://gdhucoder.github.io/thinking/2020-10-21/</guid>
      <description>昨天林卓毅结婚，第一次参加了广东的婚礼。
新娘手上带着两大串耀眼的金手镯，又一次见识到了雷人的烤乳猪。
这次婚礼收获很大，不仅见到了老师，也见到了袁俊。记得上次见到袁俊还是去年10月份，已经一年没见了，时间过的好快。
期间老师和我聊了很多。我们聊了一些近况。他也知道我已经离职了。现在在家待着等事业编的成绩。
老师说astri的工作还要再等等，我说没事（心里想去不去都没关系）。
又聊到师弟缪鑫有读博士的想法，老师也很支持，还说给买了最新的台式机。
老师也挺关心我的工作问题，想能帮些忙。还问我要不要和他做自然语言处理。具体细节没有详细谈。回来我也和娃娃说这事了，她问以什么形式呀，给不给钱呀。我也应该问一下老师能为我提供什么和我能为他做什么。
我担心我们合作能持续多久，我干一阵是自己继续找工作。
我还和老师聊了我想去学健身的想法，他是不太支持，觉得我年龄偏大，做健身教练没有什么优势。我是个人爱好，如果能通过兼职教练挣点钱也挺好。
老师还担心我待的太久，再找工作会比较困难。算起来，我虽然无所事事的也没多少天，已经待了快两个月了。
上份工作加班太狠了，我不想再找个加班很多，下班不定时的工作。
我也觉着做计算机行业挺适合我。这个行业目前发展很好，又有持续的新技术涌现，可以持续的学习。同时，最新的资料往往是英文的，英语又是我的优势， 我能在这个行业干的不错。
研究生毕业后，我找工作的时候是根据现实找工作。觉得自己不配某些好的岗位，实际面试下来往往也是不行。
记得在研究生入学前，我看了央视关于人工智能发展的记录片，里面讲的技术和应用让我很兴奋，我也想从事看起来那么炫酷的工作，研究生的时候也自学了一点相关的知识，掌握离找份工作的水平还差的很远。
这些天感觉忽然丧失了目标，之前工作比较忙，但也在一直学习，觉着学习一些东西能对工作有帮助。现在没了目标，有时会给自己打气觉着自己干什么都行，有时又会觉着自己干啥啥不行。
听陈海贤老师讲迷茫期是一个阶段，要有一个发展过程，就像生病了吃药之后，恢复也要一定的时间。我想这就是我的迷茫期吧。</description>
    </item>
    
    <item>
      <title>游北京</title>
      <link>https://gdhucoder.github.io/thinking/2020-10-14-xiangsheng/</link>
      <pubDate>Wed, 14 Oct 2020 05:51:17 +0800</pubDate>
      
      <guid>https://gdhucoder.github.io/thinking/2020-10-14-xiangsheng/</guid>
      <description>不到10块钱，体验了地道北京：
喂鸽子：地坛公园2块钱门票，2块钱鸽子食。 然后1块钱车票，坐公交去东郊民巷。 最后1块钱车票，去什刹海。
晚上还能在鼓楼附近听个相声或者话剧。
晚上去了广茗茶楼听相声。 听了赵班主的相声，知道了北京听相声并不只有德云社，就像说脱口秀的并不只有李蛋。 赵班主是91年出生的北京人，在台下亲身感受到了他对相声的热爱和激情。
期间他表演了传统的绕口令，听完感觉他基本工的扎实和语言艺术的魅力。</description>
    </item>
    
    <item>
      <title>离职了</title>
      <link>https://gdhucoder.github.io/thinking/2020-09-01/</link>
      <pubDate>Tue, 01 Sep 2020 05:51:17 +0800</pubDate>
      
      <guid>https://gdhucoder.github.io/thinking/2020-09-01/</guid>
      <description>回想一下从本科毕业到现在，生活兜兜转转，也没有什么成就。一直有条暗线指引着我做出选择。
从东营离开是因为东营是个小城市，想去北京见见世面。在北京工作了4年，一直向往研究院的工作，准备了考研究生也一直没有考上。来到深圳已经5年多了，工作两年，读书3年多。到现在又没有工作了。
研究生临毕业前匆匆的找到份工作，本来想大干一场。不到两个月，累出了心脏病，同时连续的加班让我没有时间陪娃娃和胡子。权衡利弊，还是选择辞职了。</description>
    </item>
    
    <item>
      <title>物化视图</title>
      <link>https://gdhucoder.github.io/thinking/2020-08-16/</link>
      <pubDate>Sat, 15 Aug 2020 05:51:17 +0800</pubDate>
      
      <guid>https://gdhucoder.github.io/thinking/2020-08-16/</guid>
      <description>&lt;p&gt;[TOC]&lt;/p&gt;
&lt;p&gt;总结一下目前项目用到的技术点。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>一周总结</title>
      <link>https://gdhucoder.github.io/thinking/2020-07-19-summary/</link>
      <pubDate>Wed, 15 Jul 2020 05:51:17 +0800</pubDate>
      
      <guid>https://gdhucoder.github.io/thinking/2020-07-19-summary/</guid>
      <description>&lt;p&gt;[TOC]&lt;/p&gt;
&lt;p&gt;总结一下目前项目用到的技术点。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>毕业了</title>
      <link>https://gdhucoder.github.io/thinking/2020-07-15-graduation/</link>
      <pubDate>Wed, 15 Jul 2020 05:51:17 +0800</pubDate>
      
      <guid>https://gdhucoder.github.io/thinking/2020-07-15-graduation/</guid>
      <description>&lt;p&gt;[TOC]&lt;/p&gt;
&lt;p&gt;终于毕业了。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>linux查看硬件信息</title>
      <link>https://gdhucoder.github.io/thinking/2020-04-25-graphical-card/</link>
      <pubDate>Sat, 25 Apr 2020 05:51:17 +0800</pubDate>
      
      <guid>https://gdhucoder.github.io/thinking/2020-04-25-graphical-card/</guid>
      <description>&lt;p&gt;[TOC]&lt;/p&gt;
&lt;p&gt;硬件信息。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>如何建立gazebo world model</title>
      <link>https://gdhucoder.github.io/thinking/2020-04-24-kruskal/</link>
      <pubDate>Fri, 24 Apr 2020 05:51:17 +0800</pubDate>
      
      <guid>https://gdhucoder.github.io/thinking/2020-04-24-kruskal/</guid>
      <description>&lt;p&gt;[TOC]&lt;/p&gt;
&lt;p&gt;最小生成树。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>如何建立gazebo world model</title>
      <link>https://gdhucoder.github.io/thinking/2020-03-24-gazebo/</link>
      <pubDate>Tue, 24 Mar 2020 06:51:17 +0800</pubDate>
      
      <guid>https://gdhucoder.github.io/thinking/2020-03-24-gazebo/</guid>
      <description>&lt;p&gt;[TOC]&lt;/p&gt;
&lt;p&gt;如何创建一个gazebo world用于模拟呢？&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>几张好照片</title>
      <link>https://gdhucoder.github.io/thinking/2020-03-15-goodmemories/</link>
      <pubDate>Sun, 15 Mar 2020 08:51:17 +0800</pubDate>
      
      <guid>https://gdhucoder.github.io/thinking/2020-03-15-goodmemories/</guid>
      <description>&lt;p&gt;[TOC]&lt;/p&gt;
&lt;p&gt;找出几张好玩的照片放到这里。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>一周总结</title>
      <link>https://gdhucoder.github.io/thinking/2020-03-15-summary/</link>
      <pubDate>Sun, 15 Mar 2020 06:51:17 +0800</pubDate>
      
      <guid>https://gdhucoder.github.io/thinking/2020-03-15-summary/</guid>
      <description>&lt;p&gt;[TOC]&lt;/p&gt;
&lt;p&gt;关于每日行动计划表的整理。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>给自己写封信</title>
      <link>https://gdhucoder.github.io/thinking/2020-03-03-write_a_letter/</link>
      <pubDate>Tue, 03 Mar 2020 15:51:17 +0800</pubDate>
      
      <guid>https://gdhucoder.github.io/thinking/2020-03-03-write_a_letter/</guid>
      <description>&lt;p&gt;[TOC]&lt;/p&gt;
&lt;p&gt;以5年后自己的身份，给自己写一封信。告诉自己5年后，你会怎么看待自己遇到的困难，以及现在自己的坚持？&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>How to be productive?</title>
      <link>https://gdhucoder.github.io/thinking/2020-03-01-high-light-spot/</link>
      <pubDate>Sun, 01 Mar 2020 15:51:17 +0800</pubDate>
      
      <guid>https://gdhucoder.github.io/thinking/2020-03-01-high-light-spot/</guid>
      <description>&lt;p&gt;[TOC]&lt;/p&gt;
&lt;p&gt;我问自己的一个问题，怎么样才能提高生产力？&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>总结：一周都没有解决tf变换问题的原因</title>
      <link>https://gdhucoder.github.io/thinking/2020-02-28-tf-problem/</link>
      <pubDate>Fri, 28 Feb 2020 15:51:17 +0800</pubDate>
      
      <guid>https://gdhucoder.github.io/thinking/2020-02-28-tf-problem/</guid>
      <description>&lt;p&gt;[TOC]&lt;/p&gt;
&lt;p&gt;一周都没解决tf问题，很是捉鸡，但也没有办法，还是要总结经验。避免再犯类似的错误。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>邻居家的猫</title>
      <link>https://gdhucoder.github.io/thinking/2020-02-16-cat/</link>
      <pubDate>Sun, 16 Feb 2020 20:51:17 +0800</pubDate>
      
      <guid>https://gdhucoder.github.io/thinking/2020-02-16-cat/</guid>
      <description>&lt;p&gt;[TOC]&lt;/p&gt;
&lt;p&gt;邻家的猫这几天总跑到我家来。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>博客写作迁移至Mac</title>
      <link>https://gdhucoder.github.io/thinking/2020-02-16-tomac/</link>
      <pubDate>Sun, 16 Feb 2020 15:51:17 +0800</pubDate>
      
      <guid>https://gdhucoder.github.io/thinking/2020-02-16-tomac/</guid>
      <description>&lt;p&gt;[TOC]&lt;/p&gt;
&lt;p&gt;最近换了新Mac，博客写作一直在之前的thinkpad上，今天在也忍不了了，将写作重新配置，迁移至Mac。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>如何边工作边考研</title>
      <link>https://gdhucoder.github.io/thinking/2020-02-10-kaoyan/</link>
      <pubDate>Sun, 09 Feb 2020 15:51:17 +0800</pubDate>
      
      <guid>https://gdhucoder.github.io/thinking/2020-02-10-kaoyan/</guid>
      <description>&lt;p&gt;[TOC]&lt;/p&gt;
&lt;p&gt;今天讨论一下怎么边工作边考研。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>思考时间</title>
      <link>https://gdhucoder.github.io/thinking/2020-01-27-thinkabouttime/</link>
      <pubDate>Mon, 27 Jan 2020 09:42:29 +0800</pubDate>
      
      <guid>https://gdhucoder.github.io/thinking/2020-01-27-thinkabouttime/</guid>
      <description>&lt;p&gt;[TOC]&lt;/p&gt;
&lt;p&gt;思考时间利用的问题。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Summary all design patterns</title>
      <link>https://gdhucoder.github.io/post/designpattern/029_summary/</link>
      <pubDate>Sat, 04 Jan 2020 10:26:04 +0800</pubDate>
      
      <guid>https://gdhucoder.github.io/post/designpattern/029_summary/</guid>
      <description>&lt;p&gt;[TOC]&lt;/p&gt;
&lt;p&gt;Brief summary all design patterns.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Visitor Pattern</title>
      <link>https://gdhucoder.github.io/post/designpattern/028_visitorpattern/</link>
      <pubDate>Sat, 04 Jan 2020 10:26:04 +0800</pubDate>
      
      <guid>https://gdhucoder.github.io/post/designpattern/028_visitorpattern/</guid>
      <description>&lt;p&gt;[TOC]&lt;/p&gt;
&lt;p&gt;Brief introduction about Visitor Pattern&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Interpreer Pattern</title>
      <link>https://gdhucoder.github.io/post/designpattern/027_interpreterpattern/</link>
      <pubDate>Sat, 04 Jan 2020 10:25:04 +0800</pubDate>
      
      <guid>https://gdhucoder.github.io/post/designpattern/027_interpreterpattern/</guid>
      <description>&lt;p&gt;[TOC]&lt;/p&gt;
&lt;p&gt;Brief introduction about Interpreter Pattern&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Flyweight Pattern</title>
      <link>https://gdhucoder.github.io/post/designpattern/026_flyweightpattern/</link>
      <pubDate>Sat, 04 Jan 2020 10:24:04 +0800</pubDate>
      
      <guid>https://gdhucoder.github.io/post/designpattern/026_flyweightpattern/</guid>
      <description>&lt;p&gt;[TOC]&lt;/p&gt;
&lt;p&gt;Brief introduction about Flyweight Pattern&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Mediator Pattern</title>
      <link>https://gdhucoder.github.io/post/designpattern/025_mediatorpattern/</link>
      <pubDate>Sat, 04 Jan 2020 10:24:03 +0800</pubDate>
      
      <guid>https://gdhucoder.github.io/post/designpattern/025_mediatorpattern/</guid>
      <description>&lt;p&gt;[TOC]&lt;/p&gt;
&lt;p&gt;Brief introduction about Mediator Pattern&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Bridge Pattern</title>
      <link>https://gdhucoder.github.io/post/designpattern/022_brigepattern/</link>
      <pubDate>Sat, 04 Jan 2020 10:23:03 +0800</pubDate>
      
      <guid>https://gdhucoder.github.io/post/designpattern/022_brigepattern/</guid>
      <description>&lt;p&gt;[TOC]&lt;/p&gt;
&lt;p&gt;Brief introduction about Bridge Pattern&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Chain of Responsibility Pattern</title>
      <link>https://gdhucoder.github.io/post/designpattern/024_chainofresponsibility/</link>
      <pubDate>Sat, 04 Jan 2020 10:23:03 +0800</pubDate>
      
      <guid>https://gdhucoder.github.io/post/designpattern/024_chainofresponsibility/</guid>
      <description>&lt;p&gt;[TOC]&lt;/p&gt;
&lt;p&gt;Brief introduction about Chain of Responsibility Pattern&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Command Pattern</title>
      <link>https://gdhucoder.github.io/post/designpattern/023_commandpattern/</link>
      <pubDate>Sat, 04 Jan 2020 10:23:03 +0800</pubDate>
      
      <guid>https://gdhucoder.github.io/post/designpattern/023_commandpattern/</guid>
      <description>&lt;p&gt;[TOC]&lt;/p&gt;
&lt;p&gt;Brief introduction about Command Pattern&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Singleton Pattern</title>
      <link>https://gdhucoder.github.io/post/designpattern/021_singletonpattern/</link>
      <pubDate>Sat, 04 Jan 2020 10:22:03 +0800</pubDate>
      
      <guid>https://gdhucoder.github.io/post/designpattern/021_singletonpattern/</guid>
      <description>&lt;p&gt;[TOC]&lt;/p&gt;
&lt;p&gt;Brief introduction about Singleton Pattern&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Iterator Pattern</title>
      <link>https://gdhucoder.github.io/post/designpattern/020_iteratorpattern/</link>
      <pubDate>Sat, 04 Jan 2020 10:21:03 +0800</pubDate>
      
      <guid>https://gdhucoder.github.io/post/designpattern/020_iteratorpattern/</guid>
      <description>&lt;p&gt;[TOC]&lt;/p&gt;
&lt;p&gt;Brief introduction about Iterator Pattern&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Composite Pattern</title>
      <link>https://gdhucoder.github.io/post/designpattern/019_compositepattern/</link>
      <pubDate>Sat, 04 Jan 2020 10:20:03 +0800</pubDate>
      
      <guid>https://gdhucoder.github.io/post/designpattern/019_compositepattern/</guid>
      <description>&lt;p&gt;[TOC]&lt;/p&gt;
&lt;p&gt;Brief introduction about Composite Pattern&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Adapter Pattern</title>
      <link>https://gdhucoder.github.io/post/designpattern/017_adapterpattern/</link>
      <pubDate>Sat, 04 Jan 2020 10:19:03 +0800</pubDate>
      
      <guid>https://gdhucoder.github.io/post/designpattern/017_adapterpattern/</guid>
      <description>&lt;p&gt;[TOC]&lt;/p&gt;
&lt;p&gt;Brief introduction about Adapter Pattern.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Memento Pattern</title>
      <link>https://gdhucoder.github.io/post/designpattern/018_mementopattern/</link>
      <pubDate>Sat, 04 Jan 2020 10:19:03 +0800</pubDate>
      
      <guid>https://gdhucoder.github.io/post/designpattern/018_mementopattern/</guid>
      <description>&lt;p&gt;[TOC]&lt;/p&gt;
&lt;p&gt;Brief introduction about Memento Pattern&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>State Pattern</title>
      <link>https://gdhucoder.github.io/post/designpattern/016_statepattern/</link>
      <pubDate>Sat, 04 Jan 2020 10:18:03 +0800</pubDate>
      
      <guid>https://gdhucoder.github.io/post/designpattern/016_statepattern/</guid>
      <description>&lt;p&gt;[TOC]&lt;/p&gt;
&lt;p&gt;Brief introduction about State Pattern.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Abstract Factory Pattern</title>
      <link>https://gdhucoder.github.io/post/designpattern/015_abstractpattern/</link>
      <pubDate>Sat, 04 Jan 2020 10:17:03 +0800</pubDate>
      
      <guid>https://gdhucoder.github.io/post/designpattern/015_abstractpattern/</guid>
      <description>&lt;p&gt;[TOC]&lt;/p&gt;
&lt;p&gt;Brief introduction about Abstract Factory Pattern.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Observer Pattern</title>
      <link>https://gdhucoder.github.io/post/designpattern/014_observerpattern/</link>
      <pubDate>Sat, 04 Jan 2020 10:16:03 +0800</pubDate>
      
      <guid>https://gdhucoder.github.io/post/designpattern/014_observerpattern/</guid>
      <description>&lt;p&gt;[TOC]&lt;/p&gt;
&lt;p&gt;Brief introduction about Observer Pattern.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Builder Pattern</title>
      <link>https://gdhucoder.github.io/post/designpattern/013_builderpattern/</link>
      <pubDate>Sat, 04 Jan 2020 10:15:03 +0800</pubDate>
      
      <guid>https://gdhucoder.github.io/post/designpattern/013_builderpattern/</guid>
      <description>&lt;p&gt;[TOC]&lt;/p&gt;
&lt;p&gt;Brief introduction about Builder Pattern.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Facade Pattern</title>
      <link>https://gdhucoder.github.io/post/designpattern/012_facadepattern/</link>
      <pubDate>Sat, 04 Jan 2020 10:14:03 +0800</pubDate>
      
      <guid>https://gdhucoder.github.io/post/designpattern/012_facadepattern/</guid>
      <description>&lt;p&gt;[TOC]&lt;/p&gt;
&lt;p&gt;Brief introduction about Facade Pattern.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Template Method</title>
      <link>https://gdhucoder.github.io/post/designpattern/010_templatemethodpattern/</link>
      <pubDate>Sat, 04 Jan 2020 10:13:03 +0800</pubDate>
      
      <guid>https://gdhucoder.github.io/post/designpattern/010_templatemethodpattern/</guid>
      <description>&lt;p&gt;[TOC]&lt;/p&gt;
&lt;p&gt;Brief introduction about Template Method.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Prototype Pattern</title>
      <link>https://gdhucoder.github.io/post/designpattern/009_prototypepattern/</link>
      <pubDate>Sat, 04 Jan 2020 10:12:03 +0800</pubDate>
      
      <guid>https://gdhucoder.github.io/post/designpattern/009_prototypepattern/</guid>
      <description>&lt;p&gt;[TOC]&lt;/p&gt;
&lt;p&gt;Brief introduction about prototype pattern.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Factory Method</title>
      <link>https://gdhucoder.github.io/post/designpattern/008_factorymethodpattern/</link>
      <pubDate>Sat, 04 Jan 2020 10:11:04 +0800</pubDate>
      
      <guid>https://gdhucoder.github.io/post/designpattern/008_factorymethodpattern/</guid>
      <description>&lt;p&gt;[TOC]&lt;/p&gt;
&lt;p&gt;Brief introduction about Factory Method.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Decorator</title>
      <link>https://gdhucoder.github.io/post/designpattern/006_decoratorpattern/</link>
      <pubDate>Sat, 04 Jan 2020 10:11:03 +0800</pubDate>
      
      <guid>https://gdhucoder.github.io/post/designpattern/006_decoratorpattern/</guid>
      <description>&lt;p&gt;[TOC]&lt;/p&gt;
&lt;p&gt;Brief introduction about Decorator.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Proxy Pattern</title>
      <link>https://gdhucoder.github.io/post/designpattern/007_proxypattern/</link>
      <pubDate>Sat, 04 Jan 2020 10:11:03 +0800</pubDate>
      
      <guid>https://gdhucoder.github.io/post/designpattern/007_proxypattern/</guid>
      <description>&lt;p&gt;[TOC]&lt;/p&gt;
&lt;p&gt;Brief introduction about Proxy Pattern.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>ISP</title>
      <link>https://gdhucoder.github.io/post/designpattern/005_isp/</link>
      <pubDate>Sat, 04 Jan 2020 10:09:03 +0800</pubDate>
      
      <guid>https://gdhucoder.github.io/post/designpattern/005_isp/</guid>
      <description>&lt;p&gt;[TOC]&lt;/p&gt;
&lt;p&gt;Brief introduction about ISP.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>LSP</title>
      <link>https://gdhucoder.github.io/post/designpattern/005_lsp/</link>
      <pubDate>Sat, 04 Jan 2020 10:09:03 +0800</pubDate>
      
      <guid>https://gdhucoder.github.io/post/designpattern/005_lsp/</guid>
      <description>&lt;p&gt;[TOC]&lt;/p&gt;
&lt;p&gt;Brief introduction about LSP.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>DRY</title>
      <link>https://gdhucoder.github.io/post/designpattern/005_dry/</link>
      <pubDate>Sat, 04 Jan 2020 10:08:03 +0800</pubDate>
      
      <guid>https://gdhucoder.github.io/post/designpattern/005_dry/</guid>
      <description>&lt;p&gt;[TOC]&lt;/p&gt;
&lt;p&gt;Brief introduction about DRY.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>DIP</title>
      <link>https://gdhucoder.github.io/post/designpattern/005_dip/</link>
      <pubDate>Sat, 04 Jan 2020 10:07:03 +0800</pubDate>
      
      <guid>https://gdhucoder.github.io/post/designpattern/005_dip/</guid>
      <description>&lt;p&gt;[TOC]&lt;/p&gt;
&lt;p&gt;Brief introduction about DIP.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>OCP</title>
      <link>https://gdhucoder.github.io/post/designpattern/004_ocp/</link>
      <pubDate>Sat, 04 Jan 2020 10:06:03 +0800</pubDate>
      
      <guid>https://gdhucoder.github.io/post/designpattern/004_ocp/</guid>
      <description>&lt;p&gt;[TOC]&lt;/p&gt;
&lt;p&gt;Brief introduction about OCP.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>SRP</title>
      <link>https://gdhucoder.github.io/post/designpattern/003_srp/</link>
      <pubDate>Sat, 04 Jan 2020 10:05:03 +0800</pubDate>
      
      <guid>https://gdhucoder.github.io/post/designpattern/003_srp/</guid>
      <description>&lt;p&gt;[TOC]&lt;/p&gt;
&lt;p&gt;Brief introduction about SRP.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Strategy Pattern</title>
      <link>https://gdhucoder.github.io/post/designpattern/002_strategypattern/</link>
      <pubDate>Sat, 04 Jan 2020 10:04:03 +0800</pubDate>
      
      <guid>https://gdhucoder.github.io/post/designpattern/002_strategypattern/</guid>
      <description>&lt;p&gt;[TOC]&lt;/p&gt;
&lt;p&gt;Brief introduction about Strategy Pattern.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Simple Factory Method</title>
      <link>https://gdhucoder.github.io/post/designpattern/001_simplefactory/</link>
      <pubDate>Sat, 04 Jan 2020 10:03:03 +0800</pubDate>
      
      <guid>https://gdhucoder.github.io/post/designpattern/001_simplefactory/</guid>
      <description>&lt;p&gt;[TOC]&lt;/p&gt;
&lt;p&gt;Brief introduction about Simple Factory Method.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>设计模式</title>
      <link>https://gdhucoder.github.io/post/designpattern/000_preface/</link>
      <pubDate>Sat, 04 Jan 2020 10:02:03 +0800</pubDate>
      
      <guid>https://gdhucoder.github.io/post/designpattern/000_preface/</guid>
      <description>&lt;p&gt;[TOC]&lt;/p&gt;
&lt;p&gt;Brief introduction about Design Pattern.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>为减肥设计一个模式</title>
      <link>https://gdhucoder.github.io/thinking/2019-11-17-designapatternforloosingweight/</link>
      <pubDate>Sun, 17 Nov 2019 15:51:17 +0800</pubDate>
      
      <guid>https://gdhucoder.github.io/thinking/2019-11-17-designapatternforloosingweight/</guid>
      <description>&lt;p&gt;[TOC]&lt;/p&gt;
&lt;p&gt;今天思考一下如何为自己减肥设计一个模式。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>一周总结</title>
      <link>https://gdhucoder.github.io/thinking/2019-11-16-reviewlastweek/</link>
      <pubDate>Sun, 17 Nov 2019 15:35:20 +0800</pubDate>
      
      <guid>https://gdhucoder.github.io/thinking/2019-11-16-reviewlastweek/</guid>
      <description>&lt;p&gt;[TOC]&lt;/p&gt;
&lt;p&gt;来自下午的思考。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>window file transfer between host and virtualbox linux</title>
      <link>https://gdhucoder.github.io/post/skill/2019-10-31-virtualboxsshtoubuntu/</link>
      <pubDate>Thu, 31 Oct 2019 08:14:40 +0800</pubDate>
      
      <guid>https://gdhucoder.github.io/post/skill/2019-10-31-virtualboxsshtoubuntu/</guid>
      <description>&lt;p&gt;[TOC]&lt;/p&gt;
&lt;p&gt;Window10与虚拟机linux利用端口转发(port forwarding)使用WinSCP传输文件.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>关于深度工作</title>
      <link>https://gdhucoder.github.io/thinking/2019-10-24-deepwork/</link>
      <pubDate>Thu, 24 Oct 2019 13:04:37 +0800</pubDate>
      
      <guid>https://gdhucoder.github.io/thinking/2019-10-24-deepwork/</guid>
      <description>&lt;p&gt;[TOC]&lt;/p&gt;
&lt;p&gt;每天听本书中听了关于《深度工作的内容》感到很有帮助。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>本周分享(2019-10-20)</title>
      <link>https://gdhucoder.github.io/thinking/2019-10-20-arts-001/</link>
      <pubDate>Sun, 20 Oct 2019 13:04:37 +0800</pubDate>
      
      <guid>https://gdhucoder.github.io/thinking/2019-10-20-arts-001/</guid>
      <description>&lt;p&gt;[TOC]&lt;/p&gt;
&lt;p&gt;每天听本书中听了关于《深度工作的内容》感到很有帮助。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>做事情的设计模式</title>
      <link>https://gdhucoder.github.io/thinking/2019-10-15-designpatternaboutdoingthings/</link>
      <pubDate>Tue, 15 Oct 2019 13:40:23 +0800</pubDate>
      
      <guid>https://gdhucoder.github.io/thinking/2019-10-15-designpatternaboutdoingthings/</guid>
      <description>&lt;p&gt;[TOC]&lt;/p&gt;
&lt;p&gt;昨天听了梁宁老师的做事情设计模式的文章。
发现自己总是做事情经常三分钟热度。最近发现自己健身又没有什么乐趣了。刚开始的一段时间每天都很兴奋。从美国回来后，就没那么兴奋了。这个要警惕。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>中信银行信用卡中心面试</title>
      <link>https://gdhucoder.github.io/thinking/2019-10-12-interviewcitibank/</link>
      <pubDate>Sat, 12 Oct 2019 13:40:23 +0800</pubDate>
      
      <guid>https://gdhucoder.github.io/thinking/2019-10-12-interviewcitibank/</guid>
      <description>&lt;p&gt;[TOC]&lt;/p&gt;
&lt;p&gt;今天参加了中信银行信用卡中心的面试。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>美国纽约之行（二）</title>
      <link>https://gdhucoder.github.io/thinking/2019-10-10-trip2us_part2/</link>
      <pubDate>Thu, 10 Oct 2019 11:29:42 +0800</pubDate>
      
      <guid>https://gdhucoder.github.io/thinking/2019-10-10-trip2us_part2/</guid>
      <description>&lt;p&gt;[TOC]&lt;/p&gt;
&lt;p&gt;记录纽约之行的见闻。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>美国纽约之行（一）</title>
      <link>https://gdhucoder.github.io/thinking/2019-10-10-trip2us_part1/</link>
      <pubDate>Thu, 10 Oct 2019 10:29:42 +0800</pubDate>
      
      <guid>https://gdhucoder.github.io/thinking/2019-10-10-trip2us_part1/</guid>
      <description>&lt;p&gt;[TOC]&lt;/p&gt;
&lt;p&gt;记录纽约之行的见闻。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>美国纽约之行（三）</title>
      <link>https://gdhucoder.github.io/thinking/2019-10-10-trip2us_part3/</link>
      <pubDate>Thu, 10 Oct 2019 10:29:42 +0800</pubDate>
      
      <guid>https://gdhucoder.github.io/thinking/2019-10-10-trip2us_part3/</guid>
      <description>&lt;p&gt;[TOC]&lt;/p&gt;
&lt;p&gt;记录纽约之行的见闻。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>A2C Plan</title>
      <link>https://gdhucoder.github.io/post/planning/automatedplanning/2019-08-21-a2c-plan/</link>
      <pubDate>Wed, 21 Aug 2019 16:24:46 +0800</pubDate>
      
      <guid>https://gdhucoder.github.io/post/planning/automatedplanning/2019-08-21-a2c-plan/</guid>
      <description>&lt;p&gt;[TOC]&lt;/p&gt;
&lt;p&gt;IPC 2018 中的A2C Plan&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Inteval2D的说明</title>
      <link>https://gdhucoder.github.io/post/alg4/booknote/2019-07-31_alg4_interval2d/</link>
      <pubDate>Thu, 01 Aug 2019 08:30:01 +0800</pubDate>
      
      <guid>https://gdhucoder.github.io/post/alg4/booknote/2019-07-31_alg4_interval2d/</guid>
      <description>&lt;p&gt;[TOC]&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>衍生谓词</title>
      <link>https://gdhucoder.github.io/post/planning/2019-06-22-derivedpredicate/</link>
      <pubDate>Sat, 22 Jun 2019 09:59:37 +0800</pubDate>
      
      <guid>https://gdhucoder.github.io/post/planning/2019-06-22-derivedpredicate/</guid>
      <description>&lt;p&gt;[TOC]&lt;/p&gt;
&lt;p&gt;Derived Predicates.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>win10如何在Docer容器中运行IntelliJ？</title>
      <link>https://gdhucoder.github.io/post/java_skill/2019-06-20-run-intellij-in-container/</link>
      <pubDate>Thu, 20 Jun 2019 20:17:20 +0800</pubDate>
      
      <guid>https://gdhucoder.github.io/post/java_skill/2019-06-20-run-intellij-in-container/</guid>
      <description>&lt;p&gt;[TOC]&lt;/p&gt;
&lt;p&gt;本文讲win10如何在Docer容器中运行IntelliJ&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Windows 10 Docker &amp; GUI</title>
      <link>https://gdhucoder.github.io/post/java_skill/2019-06-20-docker_gui_win10/</link>
      <pubDate>Thu, 20 Jun 2019 20:04:38 +0800</pubDate>
      
      <guid>https://gdhucoder.github.io/post/java_skill/2019-06-20-docker_gui_win10/</guid>
      <description>&lt;p&gt;[TOC]&lt;/p&gt;
&lt;p&gt;win10安装docker启动容器调用图形界面报错。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>什么是Docker？</title>
      <link>https://gdhucoder.github.io/post/note/2019-06-17-docker/</link>
      <pubDate>Tue, 18 Jun 2019 08:10:35 +0800</pubDate>
      
      <guid>https://gdhucoder.github.io/post/note/2019-06-17-docker/</guid>
      <description>&lt;p&gt;[TOC]&lt;/p&gt;
&lt;p&gt;关于Docker。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Java笔记</title>
      <link>https://gdhucoder.github.io/post/note/2019-06-11-javanote/</link>
      <pubDate>Tue, 11 Jun 2019 15:50:26 +0800</pubDate>
      
      <guid>https://gdhucoder.github.io/post/note/2019-06-11-javanote/</guid>
      <description>&lt;p&gt;[TOC]&lt;/p&gt;
&lt;p&gt;Java笔记&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Priority Queue</title>
      <link>https://gdhucoder.github.io/post/alg4/booknote/2_4_priorityqueues/</link>
      <pubDate>Thu, 30 May 2019 21:58:01 +0800</pubDate>
      
      <guid>https://gdhucoder.github.io/post/alg4/booknote/2_4_priorityqueues/</guid>
      <description>&lt;p&gt;[TOC]&lt;/p&gt;
&lt;p&gt;介绍优先队列。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Java面试</title>
      <link>https://gdhucoder.github.io/post/java_skill/2019-05-22interview/</link>
      <pubDate>Thu, 23 May 2019 20:44:58 +0800</pubDate>
      
      <guid>https://gdhucoder.github.io/post/java_skill/2019-05-22interview/</guid>
      <description>&lt;p&gt;[TOC]&lt;/p&gt;
&lt;p&gt;总结一下常见面试。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>堆的应用：如何快速获取到Top 10最热门的搜索关键词？</title>
      <link>https://gdhucoder.github.io/post/alg4/geekbang/29_heapapplication/</link>
      <pubDate>Mon, 20 May 2019 16:50:40 +0800</pubDate>
      
      <guid>https://gdhucoder.github.io/post/alg4/geekbang/29_heapapplication/</guid>
      <description>&lt;p&gt;[TOC]&lt;/p&gt;
&lt;p&gt;堆的应用。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>The Bitter Lesson</title>
      <link>https://gdhucoder.github.io/thinking/2019-05-18-bitter-lesson/</link>
      <pubDate>Sun, 19 May 2019 15:51:46 +0800</pubDate>
      
      <guid>https://gdhucoder.github.io/thinking/2019-05-18-bitter-lesson/</guid>
      <description>&lt;p&gt;[TOC]&lt;/p&gt;
&lt;p&gt;分享&lt;a href=&#34;https://en.wikipedia.org/wiki/Richard_S._Sutton&#34;&gt;Sutton&lt;/a&gt;的一篇博客。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Kafa介绍</title>
      <link>https://gdhucoder.github.io/post/note/2019-05-02-kafka/</link>
      <pubDate>Thu, 02 May 2019 15:38:48 +0800</pubDate>
      
      <guid>https://gdhucoder.github.io/post/note/2019-05-02-kafka/</guid>
      <description>&lt;p&gt;[TOC]&lt;/p&gt;
&lt;p&gt;玩玩Kafka。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>二叉树(2):有了如此高效的散列表，为什么还需要二叉树？</title>
      <link>https://gdhucoder.github.io/post/alg4/geekbang/24_binarytree_part2/</link>
      <pubDate>Wed, 01 May 2019 16:50:40 +0800</pubDate>
      
      <guid>https://gdhucoder.github.io/post/alg4/geekbang/24_binarytree_part2/</guid>
      <description>&lt;p&gt;[TOC]&lt;/p&gt;
&lt;p&gt;二叉查找树，其最大的特点就是，支持动态数据集合的快速插入，删除，查找操作。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>二叉树</title>
      <link>https://gdhucoder.github.io/post/alg4/geekbang/23_binarytree/</link>
      <pubDate>Wed, 01 May 2019 15:57:17 +0800</pubDate>
      
      <guid>https://gdhucoder.github.io/post/alg4/geekbang/23_binarytree/</guid>
      <description>&lt;p&gt;[TOC]&lt;/p&gt;
&lt;p&gt;介绍二叉树基础。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>二叉树(1)</title>
      <link>https://gdhucoder.github.io/post/alg4/geekbang/23_binarytree_part1/</link>
      <pubDate>Wed, 01 May 2019 15:57:17 +0800</pubDate>
      
      <guid>https://gdhucoder.github.io/post/alg4/geekbang/23_binarytree_part1/</guid>
      <description>&lt;p&gt;[TOC]&lt;/p&gt;
&lt;p&gt;介绍二叉树基础。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Hashing with Salt</title>
      <link>https://gdhucoder.github.io/post/note/2019-04-30-hashing-with-salt/</link>
      <pubDate>Tue, 30 Apr 2019 17:39:06 +0800</pubDate>
      
      <guid>https://gdhucoder.github.io/post/note/2019-04-30-hashing-with-salt/</guid>
      <description>&lt;p&gt;[TOC]&lt;/p&gt;
&lt;p&gt;如何防止被&amp;quot;脱裤&amp;rdquo;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>哈希表(1)</title>
      <link>https://gdhucoder.github.io/post/alg4/geekbang/18_hashmap_part1/</link>
      <pubDate>Sat, 27 Apr 2019 22:00:00 +0800</pubDate>
      
      <guid>https://gdhucoder.github.io/post/alg4/geekbang/18_hashmap_part1/</guid>
      <description>&lt;p&gt;[TOC]&lt;/p&gt;
&lt;p&gt;介绍哈希表（散列表）&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>跳表</title>
      <link>https://gdhucoder.github.io/post/alg4/geekbang/17_skip_list/</link>
      <pubDate>Sat, 27 Apr 2019 15:48:24 +0800</pubDate>
      
      <guid>https://gdhucoder.github.io/post/alg4/geekbang/17_skip_list/</guid>
      <description>&lt;p&gt;[TOC]&lt;/p&gt;
&lt;p&gt;介绍跳表&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>工业级的排序算法</title>
      <link>https://gdhucoder.github.io/post/alg4/geekbang/14_sortinjava/</link>
      <pubDate>Sun, 21 Apr 2019 16:15:56 +0800</pubDate>
      
      <guid>https://gdhucoder.github.io/post/alg4/geekbang/14_sortinjava/</guid>
      <description>&lt;p&gt;[TOC]&lt;/p&gt;
&lt;p&gt;你所熟悉的语言中，排序算法是如何实现的？&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>13 | 线性排序：如何根据年龄给100万用户数据排序？</title>
      <link>https://gdhucoder.github.io/post/alg4/geekbang/13_radix_counting_bucket_sort/</link>
      <pubDate>Sat, 20 Apr 2019 18:23:20 +0800</pubDate>
      
      <guid>https://gdhucoder.github.io/post/alg4/geekbang/13_radix_counting_bucket_sort/</guid>
      <description>&lt;p&gt;[TOC]&lt;/p&gt;
&lt;p&gt;本篇介绍线性时间排序。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://gitee.com/gdhu/prvpic/raw/master/2019-03-20-004.jpg&#34; alt=&#34;2019-03-20-004&#34;&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>阿里电话面试</title>
      <link>https://gdhucoder.github.io/thinking/2019-04-20-aliinterview/</link>
      <pubDate>Sat, 20 Apr 2019 00:58:22 +0800</pubDate>
      
      <guid>https://gdhucoder.github.io/thinking/2019-04-20-aliinterview/</guid>
      <description>&lt;p&gt;[TOC]&lt;/p&gt;
&lt;p&gt;总结一下今天阿里电话面试。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>如何学好一项技能</title>
      <link>https://gdhucoder.github.io/thinking/2019-04-16-success-exp/</link>
      <pubDate>Tue, 16 Apr 2019 10:03:33 +0800</pubDate>
      
      <guid>https://gdhucoder.github.io/thinking/2019-04-16-success-exp/</guid>
      <description>&lt;p&gt;[TOC]&lt;/p&gt;
&lt;p&gt;回顾一下过往的经历，总结对当下有帮助的经验&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>100个基本</title>
      <link>https://gdhucoder.github.io/reading/paper-book/2019-04-14-one-hundred-basics/</link>
      <pubDate>Sun, 14 Apr 2019 12:06:06 +0800</pubDate>
      
      <guid>https://gdhucoder.github.io/reading/paper-book/2019-04-14-one-hundred-basics/</guid>
      <description>&lt;p&gt;[TOC]&lt;/p&gt;
&lt;p&gt;100个基本&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>阿里在线笔试</title>
      <link>https://gdhucoder.github.io/thinking/2019-04-12-ali-onlie-test/</link>
      <pubDate>Fri, 12 Apr 2019 21:52:51 +0800</pubDate>
      
      <guid>https://gdhucoder.github.io/thinking/2019-04-12-ali-onlie-test/</guid>
      <description>&lt;p&gt;[TOC]&lt;/p&gt;
&lt;p&gt;阿里在线笔试总结。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>聪明人和笨人</title>
      <link>https://gdhucoder.github.io/thinking/2019-04-11-clever-and-stupid/</link>
      <pubDate>Thu, 11 Apr 2019 20:17:54 +0800</pubDate>
      
      <guid>https://gdhucoder.github.io/thinking/2019-04-11-clever-and-stupid/</guid>
      <description>&lt;p&gt;[TOC]&lt;/p&gt;
&lt;p&gt;什么是聪明人，什么是笨人？你是要做聪明人还是做一个笨人&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>谁在向我贩卖焦虑</title>
      <link>https://gdhucoder.github.io/thinking/2019-04-09-selling-anxiety/</link>
      <pubDate>Tue, 09 Apr 2019 05:19:56 +0800</pubDate>
      
      <guid>https://gdhucoder.github.io/thinking/2019-04-09-selling-anxiety/</guid>
      <description>&lt;p&gt;[TOC]&lt;/p&gt;
&lt;p&gt;娃娃前天提出了谁在向我们贩卖焦虑？&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Huffman Compression</title>
      <link>https://gdhucoder.github.io/post/alg4/chapter5/huffmancompression/</link>
      <pubDate>Wed, 03 Apr 2019 16:25:34 +0800</pubDate>
      
      <guid>https://gdhucoder.github.io/post/alg4/chapter5/huffmancompression/</guid>
      <description>&lt;p&gt;[TOC]&lt;/p&gt;
&lt;p&gt;总结霍夫曼压缩的相关重点。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>夜脑</title>
      <link>https://gdhucoder.github.io/reading/a-book-one-day/2019-04-02yenao/</link>
      <pubDate>Tue, 02 Apr 2019 08:06:34 +0800</pubDate>
      
      <guid>https://gdhucoder.github.io/reading/a-book-one-day/2019-04-02yenao/</guid>
      <description>&lt;p&gt;[TOC]&lt;/p&gt;
&lt;p&gt;夜脑：在睡眠中自动学习的秘密&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>华为软件精英挑战赛总结</title>
      <link>https://gdhucoder.github.io/thinking/2019-04-01-hwgame/</link>
      <pubDate>Mon, 01 Apr 2019 05:17:05 +0800</pubDate>
      
      <guid>https://gdhucoder.github.io/thinking/2019-04-01-hwgame/</guid>
      <description>&lt;p&gt;[TOC]&lt;/p&gt;
&lt;p&gt;2019华为软件精英挑战赛结束了。我们队伍排名第70，遗憾没有进入前32强，参赛的预定目标都达到了，也没什么遗憾的了。实力不济，没有办法的事。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>12 | 排序（下）：如何用快排思想在O(n)内查找第K大元素？</title>
      <link>https://gdhucoder.github.io/post/alg4/geekbang/12_mergeandquicksort/</link>
      <pubDate>Wed, 20 Mar 2019 23:38:56 +0800</pubDate>
      
      <guid>https://gdhucoder.github.io/post/alg4/geekbang/12_mergeandquicksort/</guid>
      <description>&lt;p&gt;[TOC]&lt;/p&gt;
&lt;p&gt;12 | 排序（下）：如何用快排思想在O(n)内查找第K大元素？&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://gitee.com/gdhu/prvpic/raw/master/2019-03-06-006.png&#34; alt=&#34;2019-03-06-006&#34;&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>算法之美</title>
      <link>https://gdhucoder.github.io/reading/a-book-one-day/2019-03-20beautyofalgo/</link>
      <pubDate>Wed, 20 Mar 2019 19:55:41 +0800</pubDate>
      
      <guid>https://gdhucoder.github.io/reading/a-book-one-day/2019-03-20beautyofalgo/</guid>
      <description>&lt;p&gt;[TOC]&lt;/p&gt;
&lt;p&gt;我们所有人的生活都受到有限空间和有限时间的限制，因此常常面临一系列难以抉择的问题。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>图相关的算法</title>
      <link>https://gdhucoder.github.io/post/note/2019-03-14/</link>
      <pubDate>Sat, 16 Mar 2019 06:02:06 +0800</pubDate>
      
      <guid>https://gdhucoder.github.io/post/note/2019-03-14/</guid>
      <description>&lt;p&gt;[TOC]&lt;/p&gt;
&lt;p&gt;突击学习一下。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>数据压缩算法</title>
      <link>https://gdhucoder.github.io/post/alg4/chapter5/note/</link>
      <pubDate>Wed, 13 Mar 2019 20:07:35 +0800</pubDate>
      
      <guid>https://gdhucoder.github.io/post/alg4/chapter5/note/</guid>
      <description>&lt;p&gt;[TOC]&lt;/p&gt;
&lt;p&gt;介绍经典的数据压缩算法&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>写博客缩略图实时预览与上传</title>
      <link>https://gdhucoder.github.io/post/skill/2019-03-12-realtimethumb/</link>
      <pubDate>Tue, 12 Mar 2019 10:50:18 +0800</pubDate>
      
      <guid>https://gdhucoder.github.io/post/skill/2019-03-12-realtimethumb/</guid>
      <description>&lt;p&gt;[TOC]&lt;/p&gt;
&lt;p&gt;最近一个问题一直困扰我：写博客时的截图生成图片链接的脚本不好用，没有实时性。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://gitee.com/gdhu/prvpic/raw/master/2019-03-12-001.jpg&#34; alt=&#34;我爱思考&#34;&gt;&lt;/p&gt;
&lt;p&gt;每次都需要我重新关闭打开一下。&lt;/p&gt;
&lt;p&gt;思路是&lt;/p&gt;
&lt;p&gt;a.每次新截图，保存到指定文件夹&lt;/p&gt;
&lt;p&gt;b.上传到git&lt;/p&gt;
&lt;p&gt;c.显示缩略图&lt;/p&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt;**d.下次再截图，或者对图片有修改的时候。就需要我重新打开脚本文件。**&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;这个问题一直没解决&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Go Basic</title>
      <link>https://gdhucoder.github.io/post/golang/04/</link>
      <pubDate>Mon, 11 Mar 2019 21:02:15 +0800</pubDate>
      
      <guid>https://gdhucoder.github.io/post/golang/04/</guid>
      <description>&lt;p&gt;[TOC]&lt;/p&gt;
&lt;p&gt;GO简单用法&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Go Programming Language</title>
      <link>https://gdhucoder.github.io/post/golang/01/</link>
      <pubDate>Sun, 10 Mar 2019 10:03:48 +0800</pubDate>
      
      <guid>https://gdhucoder.github.io/post/golang/01/</guid>
      <description>&lt;p&gt;[TOC]&lt;/p&gt;
&lt;p&gt;Go语言深入学习。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>读书笔记</title>
      <link>https://gdhucoder.github.io/post/golang/03/</link>
      <pubDate>Sat, 09 Mar 2019 23:39:02 +0800</pubDate>
      
      <guid>https://gdhucoder.github.io/post/golang/03/</guid>
      <description>&lt;p&gt;[TOC]&lt;/p&gt;
&lt;p&gt;读书笔记&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>成功与运气</title>
      <link>https://gdhucoder.github.io/reading/a-book-one-day/2019-03-09-successluck/</link>
      <pubDate>Sat, 09 Mar 2019 23:12:32 +0800</pubDate>
      
      <guid>https://gdhucoder.github.io/reading/a-book-one-day/2019-03-09-successluck/</guid>
      <description>&lt;p&gt;[TOC]&lt;/p&gt;
&lt;p&gt;成功与运气&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>清单革命</title>
      <link>https://gdhucoder.github.io/reading/a-book-one-day/2019-03-09-listrevolution/</link>
      <pubDate>Sat, 09 Mar 2019 23:11:13 +0800</pubDate>
      
      <guid>https://gdhucoder.github.io/reading/a-book-one-day/2019-03-09-listrevolution/</guid>
      <description>&lt;p&gt;[TOC]&lt;/p&gt;
&lt;p&gt;清单革命&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Golang not highlighting?</title>
      <link>https://gdhucoder.github.io/post/golang/02/</link>
      <pubDate>Sat, 09 Mar 2019 22:55:27 +0800</pubDate>
      
      <guid>https://gdhucoder.github.io/post/golang/02/</guid>
      <description>&lt;p&gt;[TOC]&lt;/p&gt;
&lt;p&gt;Golang not highlighting?&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>11 | 排序（上）：为什么插入排序比冒泡排序更受欢迎？</title>
      <link>https://gdhucoder.github.io/post/alg4/geekbang/11/</link>
      <pubDate>Sat, 02 Mar 2019 19:31:55 +0800</pubDate>
      
      <guid>https://gdhucoder.github.io/post/alg4/geekbang/11/</guid>
      <description>&lt;p&gt;[TOC]&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://gitee.com/gdhu/prvpic/raw/master/2019-03-04-003.png&#34; alt=&#34;2019-03-04-003&#34;&gt;&lt;/p&gt;
&lt;p&gt;本节主要介绍排序算法。&lt;/p&gt;
&lt;p&gt;首先思考一个问题：为什么插入排序比冒泡排序更受欢迎？&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>MarkDown内嵌标签</title>
      <link>https://gdhucoder.github.io/post/tech_details/markdown_use/</link>
      <pubDate>Sat, 02 Mar 2019 19:26:09 +0800</pubDate>
      
      <guid>https://gdhucoder.github.io/post/tech_details/markdown_use/</guid>
      <description>&lt;p&gt;[TOC]&lt;/p&gt;
&lt;p&gt;关于Markdown支持html标签&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>10 | 递归：如何用三行代码找到“最终推荐人”？</title>
      <link>https://gdhucoder.github.io/post/alg4/geekbang/10/</link>
      <pubDate>Sat, 02 Mar 2019 09:39:55 +0800</pubDate>
      
      <guid>https://gdhucoder.github.io/post/alg4/geekbang/10/</guid>
      <description>&lt;p&gt;[TOC]&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://gitee.com/gdhu/prvpic/raw/master/2019-03-02-003.png&#34; alt=&#34;2019-03-02-003&#34;&gt;&lt;/p&gt;
&lt;p&gt;推荐注册返佣金这个功能一般来说不陌生吧？用户A推荐用户B来注册，用户B又推荐了用户C来注册。我们可以说C的“最终推荐人”为用户A，B的“最终推荐人”也为用户A，而用户A没有“最终推荐人”。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>用十年时间自学编程</title>
      <link>https://gdhucoder.github.io/post/timefriend/ten-years/</link>
      <pubDate>Sun, 17 Feb 2019 21:26:41 +0800</pubDate>
      
      <guid>https://gdhucoder.github.io/post/timefriend/ten-years/</guid>
      <description>&lt;p&gt;[TOC]&lt;/p&gt;
&lt;p&gt;业余时间翻译经典的博文。&lt;/p&gt;
&lt;p&gt;Teach yourself programming in ten years&lt;/p&gt;
&lt;p&gt;原文链接：&lt;a href=&#34;http://norvig.com/21-days.html&#34;&gt;ten years&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>04 | 复杂度分析（下）：浅析最好、最坏、平均、均摊时间复杂度</title>
      <link>https://gdhucoder.github.io/post/alg4/geekbang/04/</link>
      <pubDate>Sun, 03 Feb 2019 09:50:04 +0800</pubDate>
      
      <guid>https://gdhucoder.github.io/post/alg4/geekbang/04/</guid>
      <description>&lt;p&gt;[TOC]&lt;/p&gt;
&lt;p&gt;浅析最好、最坏、平均、均摊时间复杂度&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>String SortsSummary 字符串排序总结</title>
      <link>https://gdhucoder.github.io/post/alg4/chapter5/stringsortssummary/</link>
      <pubDate>Fri, 01 Feb 2019 13:32:20 +0800</pubDate>
      
      <guid>https://gdhucoder.github.io/post/alg4/chapter5/stringsortssummary/</guid>
      <description>&lt;p&gt;[TOC]&lt;/p&gt;
&lt;p&gt;整理字符串排序的知识点。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Problems</title>
      <link>https://gdhucoder.github.io/post/timefriend/2019-01-30/</link>
      <pubDate>Wed, 30 Jan 2019 21:08:33 +0800</pubDate>
      
      <guid>https://gdhucoder.github.io/post/timefriend/2019-01-30/</guid>
      <description>&lt;p&gt;[TOC]&lt;/p&gt;
&lt;p&gt;Today let&amp;rsquo;s talk about our problems.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>把时间当做朋友</title>
      <link>https://gdhucoder.github.io/reading/time_is_your_friend/</link>
      <pubDate>Sun, 27 Jan 2019 07:00:00 +0800</pubDate>
      
      <guid>https://gdhucoder.github.io/reading/time_is_your_friend/</guid>
      <description>生命中，我们经常会有这样的时刻，在某个时候脑中&amp;quot;叮&amp;quot;的一声，那时你发现自己之前浪费了很多时光。
时间的流逝是单向的。
这周末看了李笑来的《把时间当做朋友》，里面讲了做事情不要着急，要相信时间的力量。
其实我就是一个做事情很急的人。由于这种心态导致很多事情没有做好。接下来自己要做出一些改变。
关于&amp;quot;规划&amp;quot;和&amp;quot;计划&amp;quot;的区别：我是一个做事情之前要做好计划的人。实际执行过程中，发现&amp;quot;计划赶不上变化&amp;rdquo;，那计划和现实冲突时我们怎么办呢？是根据现实改变还是坚持计划？ 坚持计划的话，那么按照我的&amp;quot;职业规划&amp;rdquo; 我应该是一名石油工程师。而我现在是一名程序猿。我时常为坚持计划还是调整计划而苦恼。
plan在Collins词典中的解释是：A plan is a method of achieving something that you have worked out in detail beforehand. 计划按照应该是一些列详细的解决问题的步骤，最后达到目标。
但在我学了MDP（马尔可夫决策过程）后，深刻的体会到了世界是动态的，概率的。面对概率的世界，我们应该怎么办呢？有一个plan，这个plan的目标和人生幸福有关，但能根据现实的情形（世界）做出不同的反应，这就是规划！
2019-01-27
于深圳市人民医院病理科</description>
    </item>
    
    <item>
      <title>用10年自学编程</title>
      <link>https://gdhucoder.github.io/thinking/2019-01-26/</link>
      <pubDate>Sat, 26 Jan 2019 08:00:00 +0800</pubDate>
      
      <guid>https://gdhucoder.github.io/thinking/2019-01-26/</guid>
      <description>&amp;ldquo;坚持&amp;rdquo; &amp;ldquo;努力&amp;rdquo; 今年希望把 &amp;ldquo;坚持&amp;rdquo; &amp;ldquo;努力&amp;rdquo; 这两个词从我的字典中删掉。
通过坚持和努力才能做的事情是做不好的。因为需要坚持的事情，我们从心里是不愿意做的。 不愿意做的事情怎么能够做的好呢？
解决这个问题的技巧有三个：
1、 赋予这件事崇高的意义
2、如果不做这件事，我会失去什么
3、加入一个社群</description>
    </item>
    
    <item>
      <title>算法4 Java解答 5.1.2</title>
      <link>https://gdhucoder.github.io/post/alg4/chapter5/ex_5_1_02/</link>
      <pubDate>Thu, 24 Jan 2019 06:00:00 +0800</pubDate>
      
      <guid>https://gdhucoder.github.io/post/alg4/chapter5/ex_5_1_02/</guid>
      <description>5.1.2 问题： 给出使用地位优先的字符串排序算法处理下面这些键的轨迹
no is th ti fo al go pe to co to th ai of th pa
Give a trace for LSD string sort for the keys:
no is th ti fo al go pe to co to th ai of th pa
分析： LSD 适用于字符等长的数组排序。
从右往左，依次数组中每个元素对位置d的字符使用key-indexed counting排序。
平均数组访问次数7WN+3WR。额外空间N+R。 N 对应aux数组，R对应count数组。 对于一般的应用LSD线性时间复杂度。
public static void sort(String[] a, int w) { int N = a.length; int R = 256; String[] aux = new String[N]; for (int d = w - 1; d &amp;gt;= 0; d--) { // sort by key-indexed counting on dth char  show(a); int[] count = new int[R + 1]; for (int i = 0; i &amp;lt; N; i++) { count[a[i].</description>
    </item>
    
    <item>
      <title>2019-01-23随笔</title>
      <link>https://gdhucoder.github.io/thinking/2019-01-23/</link>
      <pubDate>Wed, 23 Jan 2019 08:00:00 +0800</pubDate>
      
      <guid>https://gdhucoder.github.io/thinking/2019-01-23/</guid>
      <description>&amp;ldquo;坚持&amp;rdquo; &amp;ldquo;努力&amp;rdquo; 今年希望把 &amp;ldquo;坚持&amp;rdquo; &amp;ldquo;努力&amp;rdquo; 这两个词从我的字典中删掉。
通过坚持和努力才能做的事情是做不好的。因为需要坚持的事情，我们从心里是不愿意做的。 不愿意做的事情怎么能够做的好呢？
解决这个问题的技巧有三个：
1、 赋予这件事崇高的意义
2、如果不做这件事，我会失去什么
3、加入一个社群</description>
    </item>
    
    <item>
      <title>算法4 Java解答 2.4.24</title>
      <link>https://gdhucoder.github.io/post/alg4/chapter2/ex_2_4_24/</link>
      <pubDate>Sun, 04 Nov 2018 06:00:00 +0800</pubDate>
      
      <guid>https://gdhucoder.github.io/post/alg4/chapter2/ex_2_4_24/</guid>
      <description>2.4.24 问题： Priority queue with explicit links. Implement a priority queue using a heap- ordered binary tree, but use a triply linked structure instead of an array. You will need three links per node: two to traverse down the tree and one to traverse up the tree. Your implementation should guarantee logarithmic running time per operation, even if no maximum priority-queue size is known ahead of time.
使用链表的优先队列。使用二叉树实现一个优先队列。每个结点都需要三个链接：两个向下，一个向上。你的实现需要保证在无法预知队列大小的情况下也能保证优先队列的基本操作所需要的时间为对数级别。
分析： 插入\删除 ：</description>
    </item>
    
    <item>
      <title>算法4 Java解答 2.4.22</title>
      <link>https://gdhucoder.github.io/post/alg4/chapter2/ex_2_4_22/</link>
      <pubDate>Wed, 31 Oct 2018 08:00:00 +0800</pubDate>
      
      <guid>https://gdhucoder.github.io/post/alg4/chapter2/ex_2_4_22/</guid>
      <description>2.4.2 问题： 2.4.22 Array resizing. Add array resizing to MaxPQ, and prove bounds like those of Proposition Q for array accesses, in an amortized sense.
调整数组的大小。在MaxPQ中加入调整数组大小的代码，并和命题Q一样证明对于一般性长度为N的队列数组访问的上限。
分析： 在MaxHeap类中新增方法 resize(int max)，当堆的中元素个数等于key数组容量满的时候，key数组增大两倍，当堆的元素个数等于key数组长度的1/4时，key数组长度变为原来的1/2.
public _MaxMQ(){ this(1); } private void resize(int max){ assert max &amp;gt; N; Comparable[] temp = new Comparable[max]; for(int i=1; i&amp;lt;=N; i++){ temp[i] = pq[i]; } pq = (Key[]) temp; } public Key delMax(){ Key max = pq[1]; pq[1] = pq[N--]; // 使用 pq[N] 作为哨兵  sink(1); pq[N + 1] = null; if(N==(pq.</description>
    </item>
    
    <item>
      <title>算法4 Java解答 2.4.21</title>
      <link>https://gdhucoder.github.io/post/alg4/chapter2/ex_2_4_21/</link>
      <pubDate>Wed, 31 Oct 2018 06:00:00 +0800</pubDate>
      
      <guid>https://gdhucoder.github.io/post/alg4/chapter2/ex_2_4_21/</guid>
      <description>2.4.21 问题： 2.4.21 Elementary data structures. Explain how to use a priority queue to implement the stack, queue, and randomized queue data types from Chapter 1
分析： 题目要求使一个优先队列。
假设使用MaxPQ优先队列的操作有 insert delMax isEmpty size
Stack：
那么对于Stack LIFO 的实现我们需要指定被后插入的元素的priority比之前插入的元素priority大。
Queue:
对于Queue FIFO 的实现，需要后插入元素的priority小于之前插入元素的priority。
randomized queue：
随机队列需要指定一个随机的priority，其余实现和处理Queue的方法一样。
问题是怎么样生成一个不重复的随机数呢？我的思路是使用一个Set保存随机数。
public int random() { int num = 0; while (!numSet.contains(num)) { num = StdRandom.uniform(1, Integer.MAX_VALUE); numSet.add(num); break; } return num; } 另外要提到的是对于使用MaxPQ实现的Stack和Queue，插入删除元素的时间复杂度都是lgN。
class IKey implements Comparable&amp;lt;IKey&amp;gt;{ Key value; int priority; @Override public int compareTo(IKey another) { return compare(this.</description>
    </item>
    
    <item>
      <title>算法4 Java解答 2.4.20</title>
      <link>https://gdhucoder.github.io/post/alg4/chapter2/ex_2_4_20/</link>
      <pubDate>Mon, 29 Oct 2018 19:10:00 +0800</pubDate>
      
      <guid>https://gdhucoder.github.io/post/alg4/chapter2/ex_2_4_20/</guid>
      <description>2.4.20 问题： Prove that sink-based heap construction uses fewer than 2N compares and fewer than N exchanges.
证明基于下沉方法建立堆使用少于2N次的比较和N次交换。
分析： 官方网站解答：https://algs4.cs.princeton.edu/24pq/
假设为堆是完美的。
我们将树中节点的高度定义为以该节点为根的子树的高度。
一个高度为k的节点，下沉最多交换k次，对于每一层，有：
$$ \begin{eqnarray} h + 2(h-1) + 4(h-2) + 8(h-3) + \ldots + 2^h (0) &amp;amp; = &amp;amp; 2^{h+1} - h - 2 \
&amp;amp; = &amp;amp; n - (h+1) \
&amp;amp; \le &amp;amp; n \end{eqnarray} $$
第一项使用等比数列求和公式，第二项错位相减法。
参考： 沈星繁</description>
    </item>
    
    <item>
      <title>算法4 Java解答 2.4.19</title>
      <link>https://gdhucoder.github.io/post/alg4/chapter2/ex_2_4_19/</link>
      <pubDate>Sun, 28 Oct 2018 05:30:00 +0800</pubDate>
      
      <guid>https://gdhucoder.github.io/post/alg4/chapter2/ex_2_4_19/</guid>
      <description>2.4.19 问题： 2.4.19 Implement the constructor for MaxPQ that takes an array of items as argument, using the bottom-up heap construction method described on page 323 in the text.
实现一个MaxPQ的构造函数，接受一个数组做为参数，使用323页中描述的自底向上的方法构建堆。
分析： 将数组做为参数构建堆，可以选择从左到右扫描，使用swim()方法。 但更明智的方法是使用从右往左扫描的方式，sink()。 这个方法的想法是如果一个结点的两个子结点的树都是堆的话，sink(k)之后，两个子树就合并成了以k为根结点的子树
public MaxPQ(Key[] a){ N = a.length; pq = (Key[]) new Comparable[N+1]; for(int i=0; i&amp;lt;a.length; i++){ pq[i+1] = a[i]; } int k = N / 2; while (k &amp;gt;= 1){ sink(k); k --; } assert isMaxHeap(); show(); } 参考： 课本官网的实现MaxPQ</description>
    </item>
    
    <item>
      <title>算法4 Java解答 2.4.18</title>
      <link>https://gdhucoder.github.io/post/alg4/chapter2/ex_2_4_18/</link>
      <pubDate>Sat, 27 Oct 2018 06:00:00 +0800</pubDate>
      
      <guid>https://gdhucoder.github.io/post/alg4/chapter2/ex_2_4_18/</guid>
      <description>2.4.18 问题： 2.4.18 In MaxPQ, suppose that a client calls insert() with an item that is larger than all items in the queue, and then immediately calls delMax(). Assume that there are no duplicate keys. Is the resulting heap identical to the heap as it was before these op- erations? Answer the same question for two insert() operations (the first with a key larger than all keys in the queue and the second for a key larger than that one) followed by two delMax() operations.</description>
    </item>
    
    <item>
      <title>算法4习题 2.4.17</title>
      <link>https://gdhucoder.github.io/post/alg4/chapter2/ex_2_4_17/</link>
      <pubDate>Fri, 26 Oct 2018 06:00:00 +0800</pubDate>
      
      <guid>https://gdhucoder.github.io/post/alg4/chapter2/ex_2_4_17/</guid>
      <description>2.4.17 问题： 2.4.17 Prove that building a minimum-oriented priority queue of size k then doing N - k replace the minimum (insert followed by remove the minimum) operations leaves the k largest of the N items in the priority queue.
分析： 题意是insert followed by remove the minimum，先插入后删除。
例如
N=10, 元素为：0,2,4,6,8,1,3,5,7,9 k=3， qp = 0 2 4 N-k = 10 - 3 = 7，将要进行7次操作 pq = 0 2 4 count = 1 insert 6, pq = 0 2 4 6 remove 0, pq = 2 4 6 count = 2 insert 8, pq = 2 4 6 8 remove 2, pq = 4 6 8 count =3 insert 1, pq = 1 4 6 8 remove 1, pq = 4 6 8 .</description>
    </item>
    
    <item>
      <title>算法4习题 2.4.10</title>
      <link>https://gdhucoder.github.io/post/alg4/chapter2/ex_2_4_10/</link>
      <pubDate>Sat, 20 Oct 2018 08:00:00 +0800</pubDate>
      
      <guid>https://gdhucoder.github.io/post/alg4/chapter2/ex_2_4_10/</guid>
      <description>2.4.10 问题： 2.4.10 Suppose that we wish to avoid wasting one position in a heap-ordered array pq[], putting the largest value in pq[0], its children in pq[1] and pq[2], and so forth, proceeding in level order. Where are the parents and children of pq[k]?
分析： 略
答案： 子节点：$ 2k+1, 2k+2 $，父节点： $ \lfloor \frac{k-1}{2} \rfloor $
参考： </description>
    </item>
    
    <item>
      <title>2018-10-19随笔</title>
      <link>https://gdhucoder.github.io/thinking/2018-10-19/</link>
      <pubDate>Fri, 19 Oct 2018 08:00:00 +0800</pubDate>
      
      <guid>https://gdhucoder.github.io/thinking/2018-10-19/</guid>
      <description>随笔 已经有两个多月没有更新过博客了。
有几个原因吧。一直没有找到顺手的工具。
现在使用的工具有：
Hugo+Sublime
支持的功能主要包括：markdown格式的文档，公式支持latex，图库使用gitee。
目前正在想办法自己写一个图片预览工具，本地图片生成预览，选中图片时自动复制图库连接。</description>
    </item>
    
    <item>
      <title>2018-10-19 解决Markdown图片问题</title>
      <link>https://gdhucoder.github.io/post/skill/2018-10-19/</link>
      <pubDate>Fri, 19 Oct 2018 03:00:00 +0800</pubDate>
      
      <guid>https://gdhucoder.github.io/post/skill/2018-10-19/</guid>
      <description>[TOC]
里程碑 今天是一个里程碑，断断续续一年多，自己搭建的博客遇到的各种问题基本得到解决。
现在整理一下解决问题的思路：
博客用到的东西：Github(托管静态网页)、Hugo、Sublime、Markdown、MathJax、免费图床(gitee)、留言(需要翻墙)
遇到的问题主要有： 图床问题： 使用免费图床是个大问题：目前的解决方案是将图片上床到gitee上，这样国内访问图片速度较快。
图片链接插入问题： 之前我写了自动生成链接的脚本，但是结果输出到了文本文件中，对于图片预览实时性的要求就无法满足。
平台不通用问题： 通用性的问题一直没有解决：对于Latex公式的支持，图床的支持
以前由于各个平台不通用的问题，导致我们一直只能在一个平台上写作。而各大平台又各有优缺点，总有令人不满意的地方。
这样下来在本地写的Markdown，不需要做修改可以支持CSDN博客（或者简书）了，直接复制过去就可以。
在未来不久印象笔记windows版本也会支持Markdown，真是个令人振奋的消息。
甚至我还使用过马克飞象，但是它只能配合印象笔记使用，对于跨平台的需求无法满足。
我的github 页面托管到了github上，有兴趣的话可以试着自己搭建一个静态博客。
https://gdhucoder.github.io/
图片本地预览、链接 大家都知道Markdown使用图片需要插入图片链接。
我们使用python写了个脚本，生成文件的缩略图，自动上传gitee，点击图片缩略图，获取链接到剪切板。
接下来我又添加的每次打开Helper时，自动提交git，得到最新的图片
然后点击图片缩略图，图片的git地址（可供外网访问的地址）就被拷贝到了剪切板中，在使用的时候我们直接Ctrl+V就可以复制地址到Markdown文档中。
这个脚本还支持子目录的打开预览。
因为如果我们只用一个文件夹管理所有的博客图片势必会没有层级结构，导致最后图片混乱。
我们可以建立子文件夹，存放各个主题的图片文件。
Picture Helper使用方法：  upload your pictures to github or gitee this script can generate latest 100 picture links click the thumb picture, then the link is clipped into you clipboard then use Ctrl+V in your own Markdown Enjoy!  另附代码 主要参考了PP4E的pyphoto的代码。
各位改改可以用到的地方： 1、自动提交git脚本 2、生成缩略图（PIL的使用）</description>
    </item>
    
    <item>
      <title>算法4习题 2.1.12</title>
      <link>https://gdhucoder.github.io/post/alg4/chapter2/chapter2-1-12/</link>
      <pubDate>Mon, 06 Aug 2018 08:00:00 +0800</pubDate>
      
      <guid>https://gdhucoder.github.io/post/alg4/chapter2/chapter2-1-12/</guid>
      <description>算法4习题 2.1.12 问题 Instrument shellsort to print the number of compares divided by the array size for each increment. Write a test client that tests the hypothesis that this number is a small constant, by sorting arrays of random Double values, using array sizes that are increasing powers of 10, starting at 100.
打印希尔排序中每个增量带来的比较次数和数组大小的比值。 验证该值是一个小常数。
思路 统计每个增量对应的比较次数。
private static boolean less(Comparable v, Comparable w) { count ++ ; return v.compareTo(w) &amp;lt; 0; } 解答 Extensive experiments suggest that the average number of compares per increment might be N^(1/5) 大量实验表明每个增量的比较次数约为N的1/5次方。</description>
    </item>
    
    <item>
      <title>算法4 chp 1-1</title>
      <link>https://gdhucoder.github.io/post/alg4/chapter1/chapter1-1/</link>
      <pubDate>Tue, 15 May 2018 08:00:00 +0800</pubDate>
      
      <guid>https://gdhucoder.github.io/post/alg4/chapter1/chapter1-1/</guid>
      <description>1.1.1 7, 200.0000002, true
1.1.2 a. double 1.618 b. double 10.0 c. boolean true d. String &amp;ldquo;33&amp;rdquo;
执行Java 采用输入命令的形式：
目录：
E:\GDUT\Dropbox\Alg4\algs4\target\classes
执行：
java edu.princeton.cs.myalg.u1.Ex_1_1_3 1 1 2
$ab=bc$ $$ab=cd$$ [ x = {-b \pm \sqrt{b^2-4ac} \over 2a} \]</description>
    </item>
    
    <item>
      <title>java问题</title>
      <link>https://gdhucoder.github.io/post/note/2018-05-15/</link>
      <pubDate>Tue, 15 May 2018 07:00:00 +0800</pubDate>
      
      <guid>https://gdhucoder.github.io/post/note/2018-05-15/</guid>
      <description>&lt;p&gt;[TOC]&lt;/p&gt;
&lt;p&gt;学习过程中遇到的一些技术问题。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>java问题</title>
      <link>https://gdhucoder.github.io/post/note/2018-05-10-note/</link>
      <pubDate>Mon, 14 May 2018 07:00:00 +0800</pubDate>
      
      <guid>https://gdhucoder.github.io/post/note/2018-05-10-note/</guid>
      <description>&lt;p&gt;[TOC]&lt;/p&gt;
&lt;p&gt;学习过程中遇到的一些技术问题。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Optimistic Initial Values</title>
      <link>https://gdhucoder.github.io/post/note/2018-04-06-rl-note/</link>
      <pubDate>Fri, 06 Apr 2018 07:00:00 +0800</pubDate>
      
      <guid>https://gdhucoder.github.io/post/note/2018-04-06-rl-note/</guid>
      <description>&lt;p&gt;[TOC]&lt;/p&gt;
&lt;p&gt;Multi-armed Bandits 本篇主要介绍多臂赌博机问题的相关算法。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>MarkDown Preview MathJax</title>
      <link>https://gdhucoder.github.io/post/note/markdown-preview-mathjax/</link>
      <pubDate>Thu, 05 Apr 2018 07:00:00 +0800</pubDate>
      
      <guid>https://gdhucoder.github.io/post/note/markdown-preview-mathjax/</guid>
      <description>&lt;p&gt;[TOC]&lt;/p&gt;
&lt;h1 id=&#34;关于markdown中的公式&#34;&gt;关于MarkDown中的公式&lt;/h1&gt;</description>
    </item>
    
    <item>
      <title>如何使用gitee作为免费图床</title>
      <link>https://gdhucoder.github.io/post/tech_details/gitee_as_pic_storage/</link>
      <pubDate>Wed, 04 Apr 2018 21:25:07 +0800</pubDate>
      
      <guid>https://gdhucoder.github.io/post/tech_details/gitee_as_pic_storage/</guid>
      <description>&lt;p&gt;[TOC]&lt;/p&gt;
&lt;p&gt;本篇文章是一个启发，介绍如何使用gitee作为免费图床。
没有使用github的原因是github国内访问有些慢。
另外，还有其他优秀的云存储，例如7niu，朋友们也可以试一下。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>HuGo中文章加入目录</title>
      <link>https://gdhucoder.github.io/post/note/how-to-add-table-of-contents-in-hugo/</link>
      <pubDate>Wed, 04 Apr 2018 09:00:00 +0800</pubDate>
      
      <guid>https://gdhucoder.github.io/post/note/how-to-add-table-of-contents-in-hugo/</guid>
      <description>&lt;p&gt;本文介绍如何在template中加入TOC目录。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>规划中的宏动作</title>
      <link>https://gdhucoder.github.io/post/note/2018-04-04/</link>
      <pubDate>Tue, 03 Apr 2018 21:00:00 +0800</pubDate>
      
      <guid>https://gdhucoder.github.io/post/note/2018-04-04/</guid>
      <description>&lt;p&gt;本文介绍如何在经典规划中的宏动作。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>废弃不用的链接</title>
      <link>https://gdhucoder.github.io/post/note/2018-03-29/</link>
      <pubDate>Thu, 29 Mar 2018 21:00:00 +0800</pubDate>
      
      <guid>https://gdhucoder.github.io/post/note/2018-03-29/</guid>
      <description>废弃不用的链接 https://my.oschina.net/leonhu/blog
http://gdhu.oschina.io/blog/
https://git.oschina.net/gdhu</description>
    </item>
    
    <item>
      <title>基于试验的启发式树搜索</title>
      <link>https://gdhucoder.github.io/post/note/2018-01-05/</link>
      <pubDate>Thu, 04 Jan 2018 21:25:07 +0800</pubDate>
      
      <guid>https://gdhucoder.github.io/post/note/2018-01-05/</guid>
      <description>&lt;p&gt;[TOC]&lt;/p&gt;
&lt;h3 id=&#34;概念&#34;&gt;概念&lt;/h3&gt;
&lt;p&gt;给定一个MDP，一个agent可以访问：&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>什么是蒙特卡罗</title>
      <link>https://gdhucoder.github.io/post/planning/montecarlo/monte_carlo/</link>
      <pubDate>Sun, 26 Nov 2017 21:25:07 +0800</pubDate>
      
      <guid>https://gdhucoder.github.io/post/planning/montecarlo/monte_carlo/</guid>
      <description>&lt;p&gt;[TOC]&lt;/p&gt;
&lt;p&gt;乍一听“蒙特卡罗”这个词，完全不知所云，我感到很奇怪，一个搜索算法Monte Carlo Tree Search为什么叫蒙特卡罗。
于是，就有了下面的文字。&lt;/p&gt;
&lt;p&gt;本篇文章主要介绍MonteCarlo方法的由来，及简单的一个应用-求π的值。
下篇将会介绍：什么是Monte Carlo Tree Search算法。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Heuristic Search之Greedy Best First Search</title>
      <link>https://gdhucoder.github.io/post/java_skill/20171025-heuristic_search_gbfs/</link>
      <pubDate>Wed, 25 Oct 2017 21:25:07 +0800</pubDate>
      
      <guid>https://gdhucoder.github.io/post/java_skill/20171025-heuristic_search_gbfs/</guid>
      <description>&lt;p&gt;[TOC]&lt;/p&gt;
&lt;p&gt;本篇文章介绍Greedy Best Fisrt Search算法。实现GBFS算法时使用了上篇文章介绍的优先队列。
下篇文章将尝试介绍著名的A star算法。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Priority Queues</title>
      <link>https://gdhucoder.github.io/post/java_skill/20171024-priority_queue/</link>
      <pubDate>Tue, 24 Oct 2017 21:25:07 +0800</pubDate>
      
      <guid>https://gdhucoder.github.io/post/java_skill/20171024-priority_queue/</guid>
      <description>&lt;p&gt;[TOC]&lt;/p&gt;
&lt;p&gt;本篇文章主要介绍优先队列(Priority Queue)和嵌套类(nested class)的基本用法。
接下来的文章会介绍在实现例如Greedy Best First Search和AStar搜索算法中使用priority queue。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>贝叶斯引论（一）</title>
      <link>https://gdhucoder.github.io/post/planning/pln_1/pln_1/</link>
      <pubDate>Fri, 20 Oct 2017 21:25:07 +0800</pubDate>
      
      <guid>https://gdhucoder.github.io/post/planning/pln_1/pln_1/</guid>
      <description>&lt;p&gt;[TOC]&lt;/p&gt;
&lt;p&gt;本篇开始，逐一介绍一些概率编程相关内容。首先介绍贝叶斯网的相关基础知识和应用。&lt;/p&gt;
&lt;p&gt;本篇导读：&lt;/p&gt;
&lt;p&gt;本篇主要介绍了贝叶斯定理，贝叶斯网以及相关应用：&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>关于logistic regression</title>
      <link>https://gdhucoder.github.io/post/ml/20170905/</link>
      <pubDate>Thu, 07 Sep 2017 21:25:07 +0800</pubDate>
      
      <guid>https://gdhucoder.github.io/post/ml/20170905/</guid>
      <description>逻辑回归适用于Binary Classification, Multi-class Classification问题。
例如判断是否是垃圾邮件就属于Binary Classification问题； 手写数字识别属于Multi-class Classification问题。
one-vs-all分类器的选择，选出可信度最高的，那么就认为是正确的分类。</description>
    </item>
    
    <item>
      <title>机器学习的一些概念</title>
      <link>https://gdhucoder.github.io/post/ml/20170907/</link>
      <pubDate>Thu, 07 Sep 2017 21:25:07 +0800</pubDate>
      
      <guid>https://gdhucoder.github.io/post/ml/20170907/</guid>
      <description>中英文对照
neural networks 神经网络
activation function 激活函数
hyperbolic tangent 双曲正切函数
bias units 偏置项
activation 激活值
forward propagation 前向传播
feedforward neural network 前馈神经网络(参照Mitchell的《机器学习》的翻译)
Unsupervised Feature Learning and Deep Learning
深度学习的入门知识介绍 http://deeplearning.stanford.edu/wiki/index.php/Main_Page</description>
    </item>
    
    <item>
      <title>Mechine Learning：线性回归</title>
      <link>https://gdhucoder.github.io/post/ml_ex1/ex1/</link>
      <pubDate>Thu, 24 Aug 2017 16:50:30 +0800</pubDate>
      
      <guid>https://gdhucoder.github.io/post/ml_ex1/ex1/</guid>
      <description>前些天开始学习机器学习相关的基础知识。 首先我们要问的问题就是机器学习是什么： Tom Mitchell提出： 一个程序能被认为从经验E中学习，解决任务T，达到性能度量值P，当且仅当，有了经验E后，经过P评判，程序在处理T时系能有所提升。 监督学习 无监督学习
单变量线性回归 多变量线性回归 多项式回归也可以转化为线性回归 梯度下降 特征缩放 学习率 正规方程
Octatve代码实现</description>
    </item>
    
    <item>
      <title>Seaborn使用(2)：Choosing color palettes</title>
      <link>https://gdhucoder.github.io/post/sns_2/seaborn_2_color_palettes/</link>
      <pubDate>Mon, 14 Aug 2017 18:44:30 +0800</pubDate>
      
      <guid>https://gdhucoder.github.io/post/sns_2/seaborn_2_color_palettes/</guid>
      <description>&lt;h1 id=&#34;调色板&#34;&gt;调色板&lt;/h1&gt;
&lt;p&gt;颜色很重要，如果使用的好，就会帮助你突出数据的特征。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;color_palette()能传入任何Matplotlib所支持的颜色&lt;/li&gt;
&lt;li&gt;color_palette()不写参数则默认颜色&lt;/li&gt;
&lt;li&gt;set_palette()设置所有图的颜色&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;下面是使用seaborn的color palettes的一些例子，这些例子官网上面都已经有详细的介绍。&lt;/p&gt;
&lt;p&gt;网址为：http://seaborn.pydata.org/tutorial/color_palettes.html#palette-tutorial&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Welcome To My Site</title>
      <link>https://gdhucoder.github.io/about/about_me/</link>
      <pubDate>Mon, 14 Aug 2017 03:58:07 +0800</pubDate>
      
      <guid>https://gdhucoder.github.io/about/about_me/</guid>
      <description>&lt;h3 id=&#34;about-me&#34;&gt;About Me&lt;/h3&gt;
&lt;p&gt;在这里和您分享技术，记录成长。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>读书</title>
      <link>https://gdhucoder.github.io/reading/rd_0/</link>
      <pubDate>Mon, 14 Aug 2017 03:58:07 +0800</pubDate>
      
      <guid>https://gdhucoder.github.io/reading/rd_0/</guid>
      <description>好书将要推荐在这里！</description>
    </item>
    
    <item>
      <title>Seaborn使用(1)：Controlling figure aesthetics</title>
      <link>https://gdhucoder.github.io/post/sns_1/seaborn_1/</link>
      <pubDate>Wed, 09 Aug 2017 22:44:30 +0800</pubDate>
      
      <guid>https://gdhucoder.github.io/post/sns_1/seaborn_1/</guid>
      <description>&lt;h1 id=&#34;风格设置&#34;&gt;风格设置&lt;/h1&gt;
&lt;p&gt;Drawing attractive figures is important. When making figures for yourself, as you explore a dataset, it’s nice to have plots that are pleasant to look at. Visualizations are also central to communicating quantitative insights to an audience, and in that setting it’s even more necessary to have figures that catch the attention and draw a viewer in.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>matplot的使用之四:细节设置(2/2)</title>
      <link>https://gdhucoder.github.io/post/plt_5/plt_5/</link>
      <pubDate>Wed, 09 Aug 2017 21:44:30 +0800</pubDate>
      
      <guid>https://gdhucoder.github.io/post/plt_5/plt_5/</guid>
      <description>&lt;div class=&#34;highlight&#34;&gt;</description>
    </item>
    
    <item>
      <title>matplot的使用之四:细节设置(1/2)</title>
      <link>https://gdhucoder.github.io/post/plt_4/plt_4/</link>
      <pubDate>Wed, 09 Aug 2017 20:44:30 +0800</pubDate>
      
      <guid>https://gdhucoder.github.io/post/plt_4/plt_4/</guid>
      <description>&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; pandas &lt;span style=&#34;color:#f92672&#34;&gt;as&lt;/span&gt; pd
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; matplotlib.pyplot &lt;span style=&#34;color:#f92672&#34;&gt;as&lt;/span&gt; plt
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>matplot的使用之三:直方图、盒形图</title>
      <link>https://gdhucoder.github.io/post/plt_3/plt_3/</link>
      <pubDate>Wed, 09 Aug 2017 19:44:30 +0800</pubDate>
      
      <guid>https://gdhucoder.github.io/post/plt_3/plt_3/</guid>
      <description>&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; pandas &lt;span style=&#34;color:#f92672&#34;&gt;as&lt;/span&gt; pd
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; matplotlib.pyplot &lt;span style=&#34;color:#f92672&#34;&gt;as&lt;/span&gt; plt
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>matplot的使用之二:柱状图、散点图</title>
      <link>https://gdhucoder.github.io/post/plt_2/plt_2/</link>
      <pubDate>Tue, 08 Aug 2017 21:44:30 +0800</pubDate>
      
      <guid>https://gdhucoder.github.io/post/plt_2/plt_2/</guid>
      <description>&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; pandas &lt;span style=&#34;color:#f92672&#34;&gt;as&lt;/span&gt; pd
reviews &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; pd&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;read_csv(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;fandango_scores.csv&amp;#39;&lt;/span&gt;)
cols &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;FILM&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;RT_user_norm&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Metacritic_user_nom&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;IMDB_norm&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Fandango_Ratingvalue&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Fandango_Stars&amp;#39;&lt;/span&gt;]
norm_reviews &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; reviews[cols]
&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(norm_reviews[:&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;])
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>matplot的使用之一:折线图、子图</title>
      <link>https://gdhucoder.github.io/post/plt_1/plt_1/</link>
      <pubDate>Thu, 03 Aug 2017 21:44:30 +0800</pubDate>
      
      <guid>https://gdhucoder.github.io/post/plt_1/plt_1/</guid>
      <description>&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; pandas &lt;span style=&#34;color:#f92672&#34;&gt;as&lt;/span&gt; pd
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;unrate &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; pd&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;read_csv(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;UNRATE.csv&amp;#39;&lt;/span&gt;)
unrate[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;DATE&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; pd&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;to_datetime(unrate[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;DATE&amp;#39;&lt;/span&gt;])
&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(unrate&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;head(&lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt;))
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    
    <item>
      <title></title>
      <link>https://gdhucoder.github.io/about/resume/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://gdhucoder.github.io/about/resume/</guid>
      <description>个人简历 胡国栋
生日：1987年8月
邮箱：guodong_hu[at]126.com
微信：guodong-hu
期望职位 Java开发，工作地点：深圳
教育经历 广东工业大学｜2017.9-2020.7｜软件工程｜全日制硕士研究生
东北石油大学｜2006.9-2010.6｜全日制本科
专业技能  掌握Java，算法，数据结构，设计模式，多线程编程以及网络编程技术 熟悉机器人操作系统 ROS，Rviz，Gazebo，MoveIt!，强化学习在 ROS 上的应用。(硕 士研究生期间主要研究方向) 英语流利，无障碍听说读写，可作为工作语言 (CET-6:564分TOEFL-iBT:90分)  学术成果   D. Rao, G. Hu and Z. Jiang, &amp;ldquo;PRobPlan: A Framework of Integrating Probabilistic Planning into ROS,&amp;rdquo; in IEEE Access, doi: 10.1109/ACCESS.2020.3000293.，（二区，IF 4.098）。文章主要贡献：将概率任务规划与ROS整合，实现了高层的任务规划。code，video
  专利：饶东宁，胡国栋，一种在ROS上利用非经典规划器实现任务规划的方法及系统，202010136167.6
  D. Rao, G. Hu and Z. Jiang, &amp;ldquo;Evaluation of Different Algorithms on the RDDL Simulation Platform,&amp;rdquo; 2019 IEEE International Conference on Power, Intelligent Computing and Systems (ICPICS), Shenyang, China, 2019</description>
    </item>
    
    <item>
      <title></title>
      <link>https://gdhucoder.github.io/post/aima/chp2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://gdhucoder.github.io/post/aima/chp2/</guid>
      <description>chp2
• An agent is something that perceives and acts in an environment. The agent function for an agent specifies the action taken by the agent in response to any percept sequence. • The performance measure evaluates the behavior of the agent in an environment. A rational agent acts so as to maximize the expected value of the performance measure, given the percept sequence it has seen so far. • A task environment specification includes the performance measure, the external en- vironment, the actuators, and the sensors.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://gdhucoder.github.io/post/note/2019-03-13/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://gdhucoder.github.io/post/note/2019-03-13/</guid>
      <description>Roadmap $G=(V,E)$ 是一个有向图
$\Gamma : R \rightarrow V $ ，汽车初始的位置
$\Phi : R \rightarrow V ​$，汽车终止位置
对于每个车$path_i (c) : Z \rightarrow E $，每个车的路线。
问题是：
对于每个车$c_i (i=1,&amp;hellip;,n)$，找到可行的路线 $P={p_1,&amp;hellip;,p_n}$
**避免任意两条路线出现: 死锁。****目标： 最小化系统调度时间，即每辆车到达终点的累计总用时。**</description>
    </item>
    
    <item>
      <title></title>
      <link>https://gdhucoder.github.io/post/rl/rl-intro-ch5/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://gdhucoder.github.io/post/rl/rl-intro-ch5/</guid>
      <description></description>
    </item>
    
    <item>
      <title></title>
      <link>https://gdhucoder.github.io/post/skill/how_to_use_virtualbox/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://gdhucoder.github.io/post/skill/how_to_use_virtualbox/</guid>
      <description></description>
    </item>
    
    <item>
      <title></title>
      <link>https://gdhucoder.github.io/thinking/2020-02-05-renameremotegit/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://gdhucoder.github.io/thinking/2020-02-05-renameremotegit/</guid>
      <description>How to rename remote git
git remote set-url origin new_url ```shell $ git remote -v # View existing remotes &amp;gt; origin https://github.com/OWNER/REPOSITORY.git (fetch) &amp;gt; origin https://github.com/OWNER/REPOSITORY.git (push) $ git remote rename origin destination # Change remote name from &amp;#39;origin&amp;#39; to &amp;#39;destination&amp;#39; $ git remote -v # Verify remote&amp;#39;s new name &amp;gt; destination https://github.com/OWNER/REPOSITORY.git (fetch) &amp;gt; destination https://github.com/OWNER/REPOSITORY.git (push)  Written with StackEdit.
   </description>
    </item>
    
  </channel>
</rss>