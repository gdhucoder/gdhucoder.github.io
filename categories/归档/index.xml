<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>归档 on 野生程序员</title>
    <link>https://gdhucoder.github.io/categories/%E5%BD%92%E6%A1%A3/</link>
    <description>Recent content in 归档 on 野生程序员</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cmn-Hans</language>
    <lastBuildDate>Fri, 19 Oct 2018 08:00:00 +0800</lastBuildDate>
    
	<atom:link href="https://gdhucoder.github.io/categories/%E5%BD%92%E6%A1%A3/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>2018-10-19随笔</title>
      <link>https://gdhucoder.github.io/thinking/2018-10-19/</link>
      <pubDate>Fri, 19 Oct 2018 08:00:00 +0800</pubDate>
      
      <guid>https://gdhucoder.github.io/thinking/2018-10-19/</guid>
      <description>随笔 已经有两个多月没有更新过博客了。
有几个原因吧。一直没有找到顺手的工具。
现在使用的工具有：
Hugo+Sublime
支持的功能主要包括：markdown格式的文档，公式支持latex，图库使用gitee。
目前正在想办法自己写一个图片预览工具，本地图片生成预览，选中图片时自动复制图库连接。</description>
    </item>
    
    <item>
      <title>2018-10-19 解决Markdown图片问题</title>
      <link>https://gdhucoder.github.io/post/skill/2018-10-19/</link>
      <pubDate>Fri, 19 Oct 2018 03:00:00 +0800</pubDate>
      
      <guid>https://gdhucoder.github.io/post/skill/2018-10-19/</guid>
      <description>[TOC]
里程碑 今天是一个里程碑，断断续续一年多，自己搭建的博客遇到的各种问题基本得到解决。
现在整理一下解决问题的思路：
博客用到的东西：Github(托管静态网页)、Hugo、Sublime、Markdown、MathJax、免费图床(gitee)、留言(需要翻墙)
遇到的问题主要有： 图床问题： 使用免费图床是个大问题：目前的解决方案是将图片上床到gitee上，这样国内访问图片速度较快。
图片链接插入问题： 之前我写了自动生成链接的脚本，但是结果输出到了文本文件中，对于图片预览实时性的要求就无法满足。
平台不通用问题： 通用性的问题一直没有解决：对于Latex公式的支持，图床的支持
以前由于各个平台不通用的问题，导致我们一直只能在一个平台上写作。而各大平台又各有优缺点，总有令人不满意的地方。
这样下来在本地写的Markdown，不需要做修改可以支持CSDN博客（或者简书）了，直接复制过去就可以。
在未来不久印象笔记windows版本也会支持Markdown，真是个令人振奋的消息。
甚至我还使用过马克飞象，但是它只能配合印象笔记使用，对于跨平台的需求无法满足。
我的github 页面托管到了github上，有兴趣的话可以试着自己搭建一个静态博客。
https://gdhucoder.github.io/
图片本地预览、链接 大家都知道Markdown使用图片需要插入图片链接。
我们使用python写了个脚本，生成文件的缩略图，自动上传gitee，点击图片缩略图，获取链接到剪切板。
接下来我又添加的每次打开Helper时，自动提交git，得到最新的图片
然后点击图片缩略图，图片的git地址（可供外网访问的地址）就被拷贝到了剪切板中，在使用的时候我们直接Ctrl+V就可以复制地址到Markdown文档中。
这个脚本还支持子目录的打开预览。
因为如果我们只用一个文件夹管理所有的博客图片势必会没有层级结构，导致最后图片混乱。
我们可以建立子文件夹，存放各个主题的图片文件。
Picture Helper使用方法：  upload your pictures to github or gitee this script can generate latest 100 picture links click the thumb picture, then the link is clipped into you clipboard then use Ctrl+V in your own Markdown Enjoy!  另附代码 主要参考了PP4E的pyphoto的代码。
各位改改可以用到的地方： 1、自动提交git脚本 2、生成缩略图（PIL的使用）</description>
    </item>
    
    <item>
      <title>算法4习题 2.1.12</title>
      <link>https://gdhucoder.github.io/post/alg4/chapter2/chapter2-1-12/</link>
      <pubDate>Mon, 06 Aug 2018 08:00:00 +0800</pubDate>
      
      <guid>https://gdhucoder.github.io/post/alg4/chapter2/chapter2-1-12/</guid>
      <description>算法4习题 2.1.12 问题 Instrument shellsort to print the number of compares divided by the array size for each increment. Write a test client that tests the hypothesis that this number is a small constant, by sorting arrays of random Double values, using array sizes that are increasing powers of 10, starting at 100.
打印希尔排序中每个增量带来的比较次数和数组大小的比值。 验证该值是一个小常数。
思路 统计每个增量对应的比较次数。
private static boolean less(Comparable v, Comparable w) { count ++ ; return v.</description>
    </item>
    
    <item>
      <title>算法4 chp 1-1</title>
      <link>https://gdhucoder.github.io/post/alg4/chapter1/chapter1-1/</link>
      <pubDate>Tue, 15 May 2018 08:00:00 +0800</pubDate>
      
      <guid>https://gdhucoder.github.io/post/alg4/chapter1/chapter1-1/</guid>
      <description>1.1.1 7, 200.0000002, true
1.1.2 a. double 1.618 b. double 10.0 c. boolean true d. String &amp;ldquo;33&amp;rdquo;
执行Java 采用输入命令的形式：
目录：
E:\GDUT\Dropbox\Alg4\algs4\target\classes
执行：
java edu.princeton.cs.myalg.u1.Ex_1_1_3 1 1 2
$ab=bc$ $$ab=cd$$ [ x = {-b \pm \sqrt{b^2-4ac} \over 2a} \]</description>
    </item>
    
    <item>
      <title>java问题</title>
      <link>https://gdhucoder.github.io/post/note/2018-05-15/</link>
      <pubDate>Tue, 15 May 2018 07:00:00 +0800</pubDate>
      
      <guid>https://gdhucoder.github.io/post/note/2018-05-15/</guid>
      <description>&lt;p&gt;[TOC]&lt;/p&gt;

&lt;p&gt;学习过程中遇到的一些技术问题。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>java问题</title>
      <link>https://gdhucoder.github.io/post/note/2018-05-10-note/</link>
      <pubDate>Mon, 14 May 2018 07:00:00 +0800</pubDate>
      
      <guid>https://gdhucoder.github.io/post/note/2018-05-10-note/</guid>
      <description>&lt;p&gt;[TOC]&lt;/p&gt;

&lt;p&gt;学习过程中遇到的一些技术问题。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Optimistic Initial Values</title>
      <link>https://gdhucoder.github.io/post/note/2018-04-06-rl-note/</link>
      <pubDate>Fri, 06 Apr 2018 07:00:00 +0800</pubDate>
      
      <guid>https://gdhucoder.github.io/post/note/2018-04-06-rl-note/</guid>
      <description>&lt;p&gt;[TOC]&lt;/p&gt;

&lt;p&gt;Multi-armed Bandits 本篇主要介绍多臂赌博机问题的相关算法。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>MarkDown Preview MathJax</title>
      <link>https://gdhucoder.github.io/post/note/markdown-preview-mathjax/</link>
      <pubDate>Thu, 05 Apr 2018 07:00:00 +0800</pubDate>
      
      <guid>https://gdhucoder.github.io/post/note/markdown-preview-mathjax/</guid>
      <description>&lt;p&gt;[TOC]&lt;/p&gt;

&lt;h1 id=&#34;关于markdown中的公式&#34;&gt;关于MarkDown中的公式&lt;/h1&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>如何使用gitee作为免费图床</title>
      <link>https://gdhucoder.github.io/post/tech_details/gitee_as_pic_storage/</link>
      <pubDate>Wed, 04 Apr 2018 21:25:07 +0800</pubDate>
      
      <guid>https://gdhucoder.github.io/post/tech_details/gitee_as_pic_storage/</guid>
      <description>&lt;p&gt;[TOC]&lt;/p&gt;

&lt;p&gt;本篇文章是一个启发，介绍如何使用gitee作为免费图床。
没有使用github的原因是github国内访问有些慢。
另外，还有其他优秀的云存储，例如7niu，朋友们也可以试一下。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>HuGo中文章加入目录</title>
      <link>https://gdhucoder.github.io/post/note/how-to-add-table-of-contents-in-hugo/</link>
      <pubDate>Wed, 04 Apr 2018 09:00:00 +0800</pubDate>
      
      <guid>https://gdhucoder.github.io/post/note/how-to-add-table-of-contents-in-hugo/</guid>
      <description>&lt;p&gt;本文介绍如何在template中加入TOC目录。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>规划中的宏动作</title>
      <link>https://gdhucoder.github.io/post/note/2018-04-04/</link>
      <pubDate>Tue, 03 Apr 2018 21:00:00 +0800</pubDate>
      
      <guid>https://gdhucoder.github.io/post/note/2018-04-04/</guid>
      <description>&lt;p&gt;本文介绍如何在经典规划中的宏动作。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>废弃不用的链接</title>
      <link>https://gdhucoder.github.io/post/note/2018-03-29/</link>
      <pubDate>Thu, 29 Mar 2018 21:00:00 +0800</pubDate>
      
      <guid>https://gdhucoder.github.io/post/note/2018-03-29/</guid>
      <description>废弃不用的链接 https://my.oschina.net/leonhu/blog
http://gdhu.oschina.io/blog/
https://git.oschina.net/gdhu</description>
    </item>
    
    <item>
      <title>基于试验的启发式树搜索</title>
      <link>https://gdhucoder.github.io/post/note/2018-01-05/</link>
      <pubDate>Thu, 04 Jan 2018 21:25:07 +0800</pubDate>
      
      <guid>https://gdhucoder.github.io/post/note/2018-01-05/</guid>
      <description>&lt;p&gt;[TOC]&lt;/p&gt;

&lt;h3 id=&#34;概念&#34;&gt;概念&lt;/h3&gt;

&lt;p&gt;给定一个MDP，一个agent可以访问：&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>什么是蒙特卡罗</title>
      <link>https://gdhucoder.github.io/post/planning/montecarlo/monte_carlo/</link>
      <pubDate>Sun, 26 Nov 2017 21:25:07 +0800</pubDate>
      
      <guid>https://gdhucoder.github.io/post/planning/montecarlo/monte_carlo/</guid>
      <description>&lt;p&gt;[TOC]&lt;/p&gt;

&lt;p&gt;乍一听“蒙特卡罗”这个词，完全不知所云，我感到很奇怪，一个搜索算法Monte Carlo Tree Search为什么叫蒙特卡罗。
于是，就有了下面的文字。&lt;/p&gt;

&lt;p&gt;本篇文章主要介绍MonteCarlo方法的由来，及简单的一个应用-求π的值。
下篇将会介绍：什么是Monte Carlo Tree Search算法。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Heuristic Search之Greedy Best First Search</title>
      <link>https://gdhucoder.github.io/post/java_skill/20171025-heuristic_search_gbfs/</link>
      <pubDate>Wed, 25 Oct 2017 21:25:07 +0800</pubDate>
      
      <guid>https://gdhucoder.github.io/post/java_skill/20171025-heuristic_search_gbfs/</guid>
      <description>&lt;p&gt;[TOC]&lt;/p&gt;

&lt;p&gt;本篇文章介绍Greedy Best Fisrt Search算法。实现GBFS算法时使用了上篇文章介绍的优先队列。
下篇文章将尝试介绍著名的A star算法。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Priority Queues</title>
      <link>https://gdhucoder.github.io/post/java_skill/20171024-priority_queue/</link>
      <pubDate>Tue, 24 Oct 2017 21:25:07 +0800</pubDate>
      
      <guid>https://gdhucoder.github.io/post/java_skill/20171024-priority_queue/</guid>
      <description>&lt;p&gt;[TOC]&lt;/p&gt;

&lt;p&gt;本篇文章主要介绍优先队列(Priority Queue)和嵌套类(nested class)的基本用法。
接下来的文章会介绍在实现例如Greedy Best First Search和AStar搜索算法中使用priority queue。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>贝叶斯引论（一）</title>
      <link>https://gdhucoder.github.io/post/planning/pln_1/pln_1/</link>
      <pubDate>Fri, 20 Oct 2017 21:25:07 +0800</pubDate>
      
      <guid>https://gdhucoder.github.io/post/planning/pln_1/pln_1/</guid>
      <description>&lt;p&gt;[TOC]&lt;/p&gt;

&lt;p&gt;本篇开始，逐一介绍一些概率编程相关内容。首先介绍贝叶斯网的相关基础知识和应用。&lt;/p&gt;

&lt;p&gt;本篇导读：&lt;/p&gt;

&lt;p&gt;本篇主要介绍了贝叶斯定理，贝叶斯网以及相关应用：&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>关于logistic regression</title>
      <link>https://gdhucoder.github.io/post/ml/20170905/</link>
      <pubDate>Thu, 07 Sep 2017 21:25:07 +0800</pubDate>
      
      <guid>https://gdhucoder.github.io/post/ml/20170905/</guid>
      <description>逻辑回归适用于Binary Classification, Multi-class Classification问题。
例如判断是否是垃圾邮件就属于Binary Classification问题； 手写数字识别属于Multi-class Classification问题。
one-vs-all分类器的选择，选出可信度最高的，那么就认为是正确的分类。</description>
    </item>
    
    <item>
      <title>机器学习的一些概念</title>
      <link>https://gdhucoder.github.io/post/ml/20170907/</link>
      <pubDate>Thu, 07 Sep 2017 21:25:07 +0800</pubDate>
      
      <guid>https://gdhucoder.github.io/post/ml/20170907/</guid>
      <description>中英文对照
neural networks 神经网络
activation function 激活函数
hyperbolic tangent 双曲正切函数
bias units 偏置项
activation 激活值
forward propagation 前向传播
feedforward neural network 前馈神经网络(参照Mitchell的《机器学习》的翻译)
Unsupervised Feature Learning and Deep Learning
深度学习的入门知识介绍 http://deeplearning.stanford.edu/wiki/index.php/Main_Page</description>
    </item>
    
    <item>
      <title>Mechine Learning：线性回归</title>
      <link>https://gdhucoder.github.io/post/ml_ex1/ex1/</link>
      <pubDate>Thu, 24 Aug 2017 16:50:30 +0800</pubDate>
      
      <guid>https://gdhucoder.github.io/post/ml_ex1/ex1/</guid>
      <description>前些天开始学习机器学习相关的基础知识。 首先我们要问的问题就是机器学习是什么： Tom Mitchell提出： 一个程序能被认为从经验E中学习，解决任务T，达到性能度量值P，当且仅当，有了经验E后，经过P评判，程序在处理T时系能有所提升。 监督学习 无监督学习
单变量线性回归 多变量线性回归 多项式回归也可以转化为线性回归 梯度下降 特征缩放 学习率 正规方程
Octatve代码实现</description>
    </item>
    
    <item>
      <title>Seaborn使用(2)：Choosing color palettes</title>
      <link>https://gdhucoder.github.io/post/sns_2/seaborn_2_color_palettes/</link>
      <pubDate>Mon, 14 Aug 2017 18:44:30 +0800</pubDate>
      
      <guid>https://gdhucoder.github.io/post/sns_2/seaborn_2_color_palettes/</guid>
      <description>&lt;h1 id=&#34;调色板&#34;&gt;调色板&lt;/h1&gt;

&lt;p&gt;颜色很重要，如果使用的好，就会帮助你突出数据的特征。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;color_palette()能传入任何Matplotlib所支持的颜色&lt;/li&gt;
&lt;li&gt;color_palette()不写参数则默认颜色&lt;/li&gt;
&lt;li&gt;set_palette()设置所有图的颜色&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;下面是使用seaborn的color palettes的一些例子，这些例子官网上面都已经有详细的介绍。&lt;/p&gt;

&lt;p&gt;网址为：&lt;a href=&#34;http://seaborn.pydata.org/tutorial/color_palettes.html#palette-tutorial&#34;&gt;http://seaborn.pydata.org/tutorial/color_palettes.html#palette-tutorial&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Welcome To My Site</title>
      <link>https://gdhucoder.github.io/about/about_me/</link>
      <pubDate>Mon, 14 Aug 2017 03:58:07 +0800</pubDate>
      
      <guid>https://gdhucoder.github.io/about/about_me/</guid>
      <description>&lt;h3 id=&#34;about-me&#34;&gt;About Me&lt;/h3&gt;

&lt;p&gt;在这里和您分享技术，记录成长。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>读书</title>
      <link>https://gdhucoder.github.io/reading/rd_0/</link>
      <pubDate>Mon, 14 Aug 2017 03:58:07 +0800</pubDate>
      
      <guid>https://gdhucoder.github.io/reading/rd_0/</guid>
      <description>好书将要推荐在这里！</description>
    </item>
    
    <item>
      <title>Seaborn使用(1)：Controlling figure aesthetics</title>
      <link>https://gdhucoder.github.io/post/sns_1/seaborn_1/</link>
      <pubDate>Wed, 09 Aug 2017 22:44:30 +0800</pubDate>
      
      <guid>https://gdhucoder.github.io/post/sns_1/seaborn_1/</guid>
      <description>&lt;h1 id=&#34;风格设置&#34;&gt;风格设置&lt;/h1&gt;

&lt;p&gt;Drawing attractive figures is important. When making figures for yourself, as you explore a dataset, it’s nice to have plots that are pleasant to look at. Visualizations are also central to communicating quantitative insights to an audience, and in that setting it’s even more necessary to have figures that catch the attention and draw a viewer in.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>matplot的使用之四:细节设置(2/2)</title>
      <link>https://gdhucoder.github.io/post/plt_5/plt_5/</link>
      <pubDate>Wed, 09 Aug 2017 21:44:30 +0800</pubDate>
      
      <guid>https://gdhucoder.github.io/post/plt_5/plt_5/</guid>
      <description>&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;#Color
import pandas as pd
import matplotlib.pyplot as plt

women_degrees = pd.read_csv(&#39;percent-bachelors-degrees-women-usa.csv&#39;)
major_cats = [&#39;Biology&#39;, &#39;Computer Science&#39;, &#39;Engineering&#39;, &#39;Math and Statistics&#39;]</description>
    </item>
    
    <item>
      <title>matplot的使用之四:细节设置(1/2)</title>
      <link>https://gdhucoder.github.io/post/plt_4/plt_4/</link>
      <pubDate>Wed, 09 Aug 2017 20:44:30 +0800</pubDate>
      
      <guid>https://gdhucoder.github.io/post/plt_4/plt_4/</guid>
      <description>&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import pandas as pd
import matplotlib.pyplot as plt
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>matplot的使用之三:直方图、盒形图</title>
      <link>https://gdhucoder.github.io/post/plt_3/plt_3/</link>
      <pubDate>Wed, 09 Aug 2017 19:44:30 +0800</pubDate>
      
      <guid>https://gdhucoder.github.io/post/plt_3/plt_3/</guid>
      <description>&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import pandas as pd
import matplotlib.pyplot as plt
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>matplot的使用之二:柱状图、散点图</title>
      <link>https://gdhucoder.github.io/post/plt_2/plt_2/</link>
      <pubDate>Tue, 08 Aug 2017 21:44:30 +0800</pubDate>
      
      <guid>https://gdhucoder.github.io/post/plt_2/plt_2/</guid>
      <description>&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import pandas as pd
reviews = pd.read_csv(&#39;fandango_scores.csv&#39;)
cols = [&#39;FILM&#39;, &#39;RT_user_norm&#39;, &#39;Metacritic_user_nom&#39;, &#39;IMDB_norm&#39;, &#39;Fandango_Ratingvalue&#39;, &#39;Fandango_Stars&#39;]
norm_reviews = reviews[cols]
print(norm_reviews[:1])
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>matplot的使用之一:折线图、子图</title>
      <link>https://gdhucoder.github.io/post/plt_1/plt_1/</link>
      <pubDate>Thu, 03 Aug 2017 21:44:30 +0800</pubDate>
      
      <guid>https://gdhucoder.github.io/post/plt_1/plt_1/</guid>
      <description>&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import pandas as pd
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;unrate = pd.read_csv(&#39;UNRATE.csv&#39;)
unrate[&#39;DATE&#39;] = pd.to_datetime(unrate[&#39;DATE&#39;])
print(unrate.head(12))
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>